openapi: 3.0.0
info:
  title: IBM Security Guardium Key Lifecycle Manager
  description: Swagger for IBM Security Guardium Key Lifecycle Manager RESTful resources
  version: 4.1.0
paths:
  /SKLM/rest/v1/ckms/login:
    post:
      summary:  To log in to the IBM Security Guardium Key Lifecycle Manager server with valid user credentials.
      tags:
        - Login
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/logout:
    delete:
      summary:  To stop the user session and log out of the IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - Login
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/logout'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/backupInfo:
    get:
      summary:  To list IBM Security Guardium Key Lifecycle Manager backup files in the specified directory.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/backups:
    post:
      summary:  To run the backup task to create backup files.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmbackupRunpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list IBM Security Guardium Key Lifecycle Manager backup files in the specified directory.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: backupDirectory
          required: false
          schema:
            type: string
          description: Specify a directory that has JAR files. The JAR files contain backup data for IBM Security Guardium Key Lifecycle Manager.<br> If you do not specify the path, the path that is specified by the tklm.backup.dir property in the SKLMConfig.properties file is appended.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/backups/isrunning:
    get:
      summary:  To determine whether the backup task is running.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/backups/need:
    get:
      summary:  To determine the keys or certificates in a keystore that are not yet backed up.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/backups/progress:
    get:
      summary:  To determine the current phase of a backup task that is running.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/backups/result:
    get:
      summary:  To determine the success or failure of the most recent backup task.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/restore:
    post:
      summary:  To restore from an existing backup file.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmbackupRunRestorepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/restore/isrunning:
    get:
      summary:  To determine whether the restore task is running.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/restore/progress:
    get:
      summary:  To determine the current phase of a restore task that is running.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/restore/result:
    get:
      summary:  To determine the success or failure of a completed restore task.
      tags:
        - Backup and restore
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificateAttributes:
    put:
      summary:  To update certificate metadata that are Key Management Interoperability Protocol attributesin the database.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cerupdateCertAttributesput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates:
    get:
      summary:  To get list of all certificate in IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: uuid
          required: false
          schema:
            type: string
          description: Specify the unique ID of the certificate. For example - CERTIFICATE-b4c70958-446d-42c4-ae3b-8c9e0f44c0fa.
        - in: query
          name: alias
          required: false
          schema:
            type: string
          description: Specify the alias name for the certificate.
        - in: query
          name: attributes
          required: false
          schema:
            type: string
          description: Specify the attributes to search. Only the state and trusted attributes are supported. You can specify only one state. <br>state - You can specify the following values - <br>pending - A certificate request entry is pending the return of a certificate that is approved and certified by a certificate authority. <br>pre-active - The object exists. It is not yet usable for any cryptographic purpose. An example is a migrated certificate with a future use time stamp. <br>active - The object is in operational use for protecting and processing data that might use Process Start Date and Protect Stop Date attributes. For example, protecting includes encryption and signature issue. Processing includes decryption and signature verification. <br>compromised - The security of the object is suspect. A compromised object never returns to an uncompromised state. It cannot be used to protect data. Use the object only to process cryptographically protected information in a client that is trusted to handle compromised cryptographic objects. IBM Security Guardium Key Lifecycle Manager retains the state of the object immediately before it was compromised. To process data that was previously protected, the compromised object might continue to be used. <br>deactivated - Do not use the object to apply cryptographic protection, such as encryption or signing. However, if extraordinary circumstances occur, the object can be used with special permission to process cryptographically protected information. For example, processing includes decryption or verification. <br>destroyed - Object is no longer usable for any purpose. However, the compromised status of the object can be retained for audit or security purposes. <br>destroyed-compromised - Object is no longer usable for any purpose. However, the compromised status of the object can be retained for audit or security purposes. <br>trusted - Values for this attribute can be y, n, or no value. Set the value to y to list only trusted certificates. <br>Set the value to n to list only the untrusted certificates. Not setting a value lists both trusted and untrusted certificates.
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Specify the target application usage with the following values - 3592, DS8000, GPFS, PEER_TO_PEER, GENERIC, SSLCLIENT, SSLSERVER, SYSLOG, userdevicegroup.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Specify the number of records to display on the specified page (offset).
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    post:
      summary:  To create a certificate and a public and private key pair.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cercreateCertificatepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update attributes or usage for a certificate.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cerupdateCertificatesput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/bulkCertUpdate:
    put:
      summary:  Use Bulk Certificate Update REST Service to update communication certificates for client devices that have the same WWNN (worldwide node name) value as in the new certificate.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/cerbulkCertUpdateput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/client:
    put:
      summary:  Use Update Owner REST Service to update the owner of the KMIP objects to use the new client certificate.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cerupdateClientCertCredsput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/export:
    put:
      summary:  To export a certificate file.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cerexportCertificatesput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/import:
    post:
      summary:  To import a certificate file.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cerimportCertificatespost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/rollover:
    post:
      summary:  To add a default certificate rollover for a specific date and device group.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cercertificateDefaultRolloverAddpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list certificate rollovers in a rollover list for a specified device group.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Required. Specify the device group. <br>You can include the following values - <br> 3592 - Specifies the 3592 device group. <br> userdevicegroup - Specifies a new, user-defined instance of a supported 3592 device family.
        - in: query
          name: uuid
          required: false
          schema:
            type: string
          description: Optional. Specify the unique universal identifier of an existing certificate rollover.
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Optional. Specify the name of the existing certificate, which is not case-sensitive.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/rollover/{uuid}:
    delete:
      summary:  To remove a certificate rollover that is specified in a rollover list.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Required. Specify the universal unique identifier of an existing certificate rollover.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/certificates/{alias}:
    delete:
      summary:  To delete a certificate from the IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - Certificate management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: alias
          required: true
          schema:
            type: string
          description: Specify a unique name of the certificate to be deleted.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients:
    post:
      summary:  To create a client that is registered with IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clicreateClientpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  Use List All Clients REST Service to retrieve the list of clients from the database.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: isSKLMUI
          required: false
          schema:
            type: string
          description: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups:
    post:
      summary:  Use Create Client Group Rest Service to create a client group that is registered with the IBM Security Key Lifecycle manager.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/clicreateGrouppost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  Use List All Client Group Details Rest Service to get details of all the client groups.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: isSKLMUI
          required: false
          schema:
            type: string
          description: 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups/clientList:
    get:
      summary:  Use List Clients Not in Any Client Group Rest Service to list all the clients which are not assigned to any client group.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups/updateGroupName:
    put:
      summary:  Use Update Client Group Name Rest Service to update the name of an existing client group.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliupdateGroupNameput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups/{groupName}:
    delete:
      summary:  Use Delete Client Group Rest Service to delete a client group. It does not delete the clients in the group or its objects.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: groupName
          required: true
          schema:
            type: string
          description: Required. Specify the client group name that you want to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  Use List Client Group Details Rest Service to get details of a specified client group.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: groupName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client group.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups/{groupName}/assignClients:
    put:
      summary:  Use Assign Client To Group Rest Service to assign clients to a client group who can access each others objects.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: groupName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client group to which you want to assign the clients.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliassignClientsToGroupput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/groups/{groupName}/removeClients:
    put:
      summary:  Use Remove Clients From Group Rest Service to remove the clients from the client group.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: groupName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client group from which you want to remove the clients.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliremoveClientsFromGroupput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/updateClientName:
    put:
      summary:  To update the name of a client.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliupdateClientNameput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/{clientName}:
    delete:
      summary:  To delete a client and the cryptographic objects that are associated with it.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client that you want to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To retrieve details of a specific client from the database.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client of which you want to retrieve the details.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/{clientName}/assignCertificate:
    put:
      summary:  To associate a certificate with a client.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliassignClientCertput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/{clientName}/assignUsers:
    put:
      summary:  To assign users to a client who can access the managed objects of the client.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client to which you want to assign the users.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliassignUserstoClientput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/{clientName}/listObjectsToClient:
    get:
      summary:  To retrieve details of all the managed objects that are associated with a client.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/clients/{clientName}/removeUsers:
    put:
      summary:  To remove users that are assigned to a client.
      tags:
        - Client management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: clientName
          required: true
          schema:
            type: string
          description: Required. Specify the name of the client.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cliremoveUserstoClientput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/conflictResolution/changeCertificateAlias:
    post:
      summary:  To change the alias of a certificate present in the IBM Security Guardium Key Lifecycle Manager instance.
      tags:
        - Conflict resolution
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmchangeCertificateAliaspost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/conflictResolution/changeName:
    post:
      summary:  To change the serial number of a storage device.
      tags:
        - Conflict resolution
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmchangeNamepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/conflictResolution/getChangeHistory:
    get:
      summary:  To get information about the historical changes that are done to different managed objects such as key alias, certificate alias, device serial number, and UUID in the IBM Security Guardium Key Lifecycle Manager instance.
      tags:
        - Conflict resolution
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/conflictResolution/renewKeyAlias:
    post:
      summary:  To change the alias of a key present in the IBM Security Guardium Key Lifecycle Manager instance.
      tags:
        - Conflict resolution
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmrenewKeyAliaspost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/conflictResolution/renewUUID:
    post:
      summary:  To change the uuid of a object.
      tags:
        - Conflict resolution
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmrenewUUIDpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupsExport:
    post:
      summary:  To create an encrypted archive that contains device group data for exporting to another instance of IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmexportRunpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list exported files in a directory.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: exportDirectory
          required: false
          schema:
            type: string
          description: Specify the directory path to list the exported files.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupsExport/deleteExportFile:
    delete:
      summary:  To delete an export file from the IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: exportFilePath
          required: false
          schema:
            type: string
          description: ExportResource.deleteExportFile.exportFilePath
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupsExport/viewSummaryOfExportFileInADirectory:
    post:
      summary:  To view the summary of a device group export file.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmviewSummaryOfExportFileInADirectorypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupsImport:
    post:
      summary:  To import device group data into IBM Security Guardium Key Lifecycle Manager server from the export file.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmimportRunpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupsImport/importConflicts:
    post:
      summary:  To lists the data conflicts, if any, when the device group data is imported from an export file into an IBM Security Guardium Key Lifecycle Manager instance.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmprovideImportConflictpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceGroupAttributes:
    get:
      summary:  To list all of the attributes of a device group, such as LTO.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Required. Specify a unique device group, such as LTO, with the following values - LTO, 3592, DS5000, DS8000, GPFS, PEER_TO_PEER, DS8000_TCT, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update the attributes of a device group, such as myLTO.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devupdatetDeviceGroupAttributesput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete an attribute of a device group, such as myLTO.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devdeleteDeviceGroupAttributesdelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceGroups:
    get:
      summary:  To obtain a list of device groups within a device family, such as LTO
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Specify a user-defined name for a device group. For example, BRCD_ENCRYPTOR.
        - in: query
          name: deviceFamily
          required: false
          schema:
            type: string
          description: Specify a unique device family, such as LTO. You can specify the following values - LTO, 3592, DS5000, GPFS, PEER_TO_PEER, GENERIC.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Specify the number of records to display on the page that you specified with offset. The count must not exceed 2000 records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceGroups/base:
    get:
      summary:  To list all of the device group families that IBM Security Guardium Key Lifecycle Manager provides, such as LTO and 3592.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceGroups/{name}:
    post:
      summary:  To create a device group, such as myLTO.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: Specify a user-defined name for a device group. For example, myDivisionLTO Follow these rules to define a name <br>Do not specify a reserved value of 3592, DS8K, DS8000, LTO, DS5000, GPFS, PEER_TO_PEER or GENERIC. <br>Do not specify a reserved value of SSLSERVER or SSLCLIENT. <br>The name must start with an alphabetic character, not a numeral. It can contain only alphanumeric characters and underscores. <br>The name cannot consist of a single underscore and must not exceed a length of 16 characters.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devcreateDeviceGrouppost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete an empty customized device group such as myLTO.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: Specify a user-defined name of an existing device group. You cannot delete a device family that a customized device group references.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceTypes:
    get:
      summary:  To obtain a list of device groups for the device type you specified.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: deviceListType
          required: false
          schema:
            type: string
          description: Optional. Specify the device list type for which the list of device groups are to be returned.Device lists for all the types are returned if you do not specify this parameter. <br>You can specify any of the following values admin, rollover, step <br>You can specify multiple comma-separated values.    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/deviceTypes/{deviceListType}:
    get:
      summary:  To obtain a list of device groups for the device type you specified.
      tags:
        - Device group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: deviceListType
          required: true
          schema:
            type: string
          description: Optional. Specify the device list type for which the list of device groups are to be returned. <br>Device lists for all the types are returned if you do not specify this parameter. <br>You can specify any of the following values <br>admin, rollover, step. You can specify multiple comma-separated values.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/devices:
    post:
      summary:  To add a device to the IBM Security Guardium Key Lifecycle Manager database. <br>If the device is a DS5000 storage server, this service can optionally create a system-to-device relationship.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devcreateDevicepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list information about all devices of a specific device group, or a device in the IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: uuid
          required: false
          schema:
            type: string
          description: Specify the unique ID of the device. For example - DEVICE-74386920-148c-47b2-a1e2-d19194b315cf
        - in: query
          name: type
          required: false
          schema:
            type: string
          description: Specify the device group type. The default is all device groups. LTO, 3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Specify the number of records to display on the specified page (offset). The first 2000 records are returned if you do not specify the value for offset and count.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update the attributes of a device in the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/devupdateDeviceput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/devices/{uuid}:
    delete:
      summary:  To remove information that identifies a device from the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Required. Specify the universal unique identifier of the device, such as DEVICE-74386920-148c-47b2-a1e2-d19194b315cf.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/machines:
    post:
      summary:  To create a machine identity in the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/macaddMachineIdentitypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To remove a machine identity from the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/macdeleteMachineIdentitydelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list known machine identities for a DS5000 device group.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Optional. Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Optional. Specify the number of records to display on the page that you specified with offset. The count must not exceed 2000 records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update the machine text of a machine in the IBM Security Guardium Key Lifecycle Manager database
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/macupdateMachineIdentityput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/machines/device:
    post:
      summary:  To add the association of a device to an existing machine identifier in the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/macaddMachineDevicepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To remove the association of a device to an existing machine identifier in the IBM Security Guardium Key Lifecycle Manager database.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/macdeleteMachineDevicedelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list all the devices that are associated with a specific machine ID or machine text.
      tags:
        - Device management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: machineID
          required: false
          schema:
            type: string
          description: Required if the value of machineText is not specified. <br>Specify a unique machine ID in a range 1 - 48 characters. <br>For example, 3042383030303437000000000000. <br>Use Machine Identity List REST Service to locate machine identities.
        - in: query
          name: machineText
          required: false
          schema:
            type: string
          description: Required if the value of machineID is not specified. <br>Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for a machine, such asmyEncryptedDS5000.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Optional. Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Optional. Specify the number of records to display on the page that you specified with offset. The count must not exceed 2000 records. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/filetransfer/download/logs:
    get:
      summary:  To download log files from the IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - File transfer
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/filetransfer/download/objectfiles:
    get:
      summary:  To download files from IBM Security Guardium Key Lifecycle Manager Data Folder.
      tags:
        - File transfer
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: fileName
          required: false
          schema:
            type: string
          description: Required. Specify the name of the file that you want to download from the server. Ensure that you provide the file name with the complete relative path within the SKLM_Data folder.If the file exists in the SKLM_DATA folder, then no file path needs to be provided.
      responses:
        '200':
          description: OK
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/filetransfer/upload/license:
    post:
      summary:  To upload the license files.
      tags:
        - File transfer
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/fillicenseUploadpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/filetransfer/upload/objectfiles:
    post:
      summary:  To upload files to IBM Security Guardium Key Lifecycle Manager Data Folder.
      tags:
        - File transfer
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/filfileUploadpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keygroupentry:
    post:
      summary:  To add keys to an existing key group.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyaddKeyGroupEntrypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete objects from a group.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keydeleteKeyGroupEntrydelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keygroups:
    get:
      summary:  To list the objects in a group of keys, or the groups of a specific type.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Specify the unique device group, such as LTO. <br>You can specify any of the following values - LTO, DS5000, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        - in: query
          name: name
          required: false
          schema:
            type: string
          description: Specify the group name.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Specify the number of records to display on the page that you specified with offset. The count must not exceed 2000 records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update group metadata in the database for moving all the keys in a key group from one device group to another, within the same device group family.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyupdateGroupput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keygroups/rollover:
    post:
      summary:  To add a default key group rollover to serve keys to a device group on a specific date.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keykeyGroupDefaultRolloverAddpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list key group rollovers in a rollover list
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Required. Specify the device group. <br>You can include the following values - LTO, BRCD_ENCRYPTOR, userdevicegroup.
        - in: query
          name: uuid
          required: false
          schema:
            type: string
          description: Optional. Specify the unique universal identifier of an existing key group rollover.
        - in: query
          name: keyGroupName
          required: false
          schema:
            type: string
          description: Optional. Specify the case-sensitive name of a key group. <br>For example - myLTOkeygroup.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keygroups/rollover/{uuid}:
    delete:
      summary:  To remove a key group rollover that is specified in a rollover list.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Specify the unique universal identifier of the key group rollover that you want to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keygroups/{group}:
    post:
      summary:  To create a key group to which you can add keys.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: group
          required: true
          schema:
            type: string
          description: Specify a unique name of the group to be created.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keycreateGrouppost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete a key group.
      tags:
        - Key group management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: group
          required: true
          schema:
            type: string
          description: Specify a unique identifier for the group. An example of a key group UUID is GROUP-7d588437-e725-48bf-a836-00a47df64e78.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keyAttributes:
    put:
      summary:  To update key metadata that are Key Management Interoperability Protocol attributes in the database.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyupdateKeyAttributesput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keys:
    post:
      summary:  To create one or more symmetric keys to encrypt and decrypt data.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keycreateSecretKeypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To list a key or keys in the keystore that is based on specified criteria, such as an active state.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: alias
          required: false
          schema:
            type: string
          description: Specify the unique alias name for the key.
        - in: query
          name: uuid
          required: false
          schema:
            type: string
          description: Specify the unique ID of the key.
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Specify the device group that contains the key. <br>You can specify the following values - LTO ,3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, GPFS, PEER_TO_PEER, DS8000_TCT, userdevicegroup, SSLSERVER, SSLCLIENT.
        - in: query
          name: attributes
          required: false
          schema:
            type: string
          description: Specify the current state of the key. <br>You can specify the following values - pending, pre-active, active, compromised, deactivated, destroyed, destroyed-compromised.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Specify the number of records to display on the specified page that you specify with offset. 
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update key metadata in the database.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyupdateKeyput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keys/export:
    put:
      summary:  To export secret keys or public/private key pairs.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyexportKeyput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keys/import:
    post:
      summary:  To import secret keys or public/private key pairs.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/keyimportKeypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keys/{alias}:
    delete:
      summary:  To delete a key entry from the keystore.
      tags:
        - Key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: alias
          required: true
          schema:
            type: string
          description: Specify the unique alias name for the key.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/secretData:
    get:
      summary:  To list KMIP Secret Data.
      tags:
        - KMIP secret data management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/secretData/{uuid}:
    delete:
      summary:  To delete KMIP Secret Data.
      tags:
        - KMIP secret data management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Required. Specify the unique universal identifier of the secret data object that you want to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/kmipTemplate:
    get:
      summary:  To obtain the list of KMIP templates that IBM Security Guardium Key Lifecycle Manager provides.
      tags:
        - KMIP template management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/kmipTemplate/{uuid}:
    delete:
      summary:  To delete a KMIP template.
      tags:
        - KMIP template management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Required. Specify the unique universal identifier of the KMIP template that you want to delete. For example, K_TEMPLATE-d110f48-8bc607f9-a1c9-4a3d-b189-e65e679205e9.    
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupMasterKey:
    get:
      summary:  To obtain details of the master key status for all the device groups.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupMasterKey/rotate:
    post:
      summary:  To refresh the master key for all device groups.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmrotateDGMKResourcespost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupMasterKey/{deviceGroupName}:
    post:
      summary:  To enable or disable the master key for a device group.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: deviceGroupName
          required: true
          schema:
            type: string
          description: Specify the name of the device group to enable the master key.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmenableDeviceTypeMasterKeypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupMasterKey/{devicegroupName}:
    get:
      summary:  To obtain details of the master key status for a specific device group.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: devicegroupName
          required: true
          schema:
            type: string
          description: Optional. Specify the name of the device group for which you want to retrieve the master key status details. <br>If you do not specify this parameter, master key status for all the device groups are returned. <br>Some examples of device groups are 3592, LTO, DS8000, and GPFS.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/deviceGroupMasterKey/{devicegroupName}/rotate:
    post:
      summary:  To refresh the master key for a specific device group.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: devicegroupName
          required: true
          schema:
            type: string
          description: Optional. Specify the name of the device group for which you want to refresh the master key. If you do not specify this parameter, master keys for all the device groups are refreshed. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmrotateDGMKResourcepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/masterKey:
    post:
      summary:  To refresh/move the master key.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmcreateMasterKeypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/masterKey/transmitter:
    post:
      summary:  To transfer the master key from primary IBM Security Guardium Key Lifecycle Manager server to standby server or nodes in a Multi-Master cluster.
      tags:
        - Master key management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmsendMasterKeypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/addNodes:
    post:
      summary:  To add a server in the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmaddNodespost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/getClusterName:
    get:
      summary:  To get the cluster name
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/isNodeIsolatedFromCluster:
    get:
      summary:  To know whether the non-HADR master server is isolated from the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/joinBackTheCluster:
    get:
      summary:  To rejoin the isolated master, which is configured in read-write mode, back to the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/reconfig:
    post:
      summary:  Use Reconfigure Multi-Master Cluster REST Service to reconfigure the master servers of the Multi-Master cluster after restoring the backup of a standalone server to the primary master server. You must run this rest service on the primary master server.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/regenerateClusterName:
    post:
      summary:  To regenerate the cluster name
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/removeNode:
    post:
      summary:  To remove a node from the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmremoveNodepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/restartCluster:
    post:
      summary:  To restart the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/setupAsReadWriteMaster:
    get:
      summary:  To configure master server in read-write mode when the master is isolated from the Multi-Master cluster due to connectivity or network issues.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/stopCluster:
    post:
      summary:  To stop the the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/takeoverAsPrimary:
    post:
      summary:  To promote a standby master to primary master server.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmpromoteAsPrimarypost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/config/nodes/updateMaster:
    post:
      summary:  Use Modify Master REST Service to modify master server details to meet your requirements.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmupdateNodeWithConnectionValidationpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/multimaster/agent//expiringCertificates:
    get:
      summary:  Use List Expiring/Expired Agent Certificates Rest Service to get a list of agent certificates that have expired or will expire soon.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/multimaster/agent//state:
    get:
      summary:  Use Get Agent Status Rest Service to get the status of the agent.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/multimaster/agentstatus:
    get:
      summary:  To obtain detailed status information for the agent service that is installed in a IBM Security Guardium Key Lifecycle Manager master server of the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/multimaster/startagent:
    post:
      summary:  To start the agent service in a master server of the IBM Security Guardium Key Lifecycle Manager server Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/multimaster/stopagent:
    post:
      summary:  To stop the agent service in a master server of the IBM Security Guardium Key Lifecycle Manager server Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes:
    get:
      summary:  To retrieve configuration details of all masters in the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes/allDBNodeStatus:
    get:
      summary:  To obtain the status of cluster configuration and ports on all master servers in the the Multi-Master cluster.    
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes/allNodeStatus:
    get:
      summary:  To obtain status information that indicates whether all the communication ports in the master servers are reachable.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes/checkPreRequisite:
    post:
      summary:  To verify whether the master server that you want to add to the cluster meets all requirements and conditions that are defined for Multi-Master configuration.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmcheckPreRequisitepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes/getClusterHADRStatus:
    get:
      summary:  To obtain the status of the Db2 high availability disaster recovery (HADR) configuration in the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/nodes/getThisNodeDetails:
    get:
      summary:  To retrieve configuration details of a specific master in the Multi-Master cluster.
      tags:
        - Multi-Master cluster management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects:
    get:
      summary:  To retrieve details of all the managed objects that are associated with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: clientName
          required: false
          schema:
            type: string
          description: Specify the name of the client. Details of all the cryptographic objects that are associated with the client are retrieved.
        - in: query
          name: objectType
          required: false
          schema:
            type: string
          description: Specify the type of objects that you want to retrieve. <br>You can provide one of the following values PUBLIC_KEY, PRIVATE_KEY, SYMMETRIC_KEY, CERTIFICATE, OPAQUE_OBJECT, SECRET_DATA
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/certificate:
    post:
      summary:  To register a certificate with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objstoreCertificateObjectpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/keypair:
    post:
      summary:  To create or register a public-private key pair and associate it with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objstoreKeyPairObjectpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/opaque:
    post:
      summary:  To register an opaque object with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objstoreOpaqueObjsyectObjectpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/secret:
    post:
      summary:  To create or register one ore more secret data objects and associate them with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objstoreSecretDataObjectpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/symmetrickey:
    post:
      summary:  To create or register one or more symmetric keys and associate them with a client.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/objstoreSymmetricKeyObjectpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/objects/{objectId}:
    get:
      summary:  To retrieve details about a specific managed object.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: objectId
          required: true
          schema:
            type: string
          description: Required. Specify the unique identifier of the managed object. For example, CERTIFICATE-d374678-9273bd2c-861f-4f5a-834a-7b1085d3a0dd.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete a specific managed object.
      tags:
        - Object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: objectId
          required: true
          schema:
            type: string
          description: Required. Specify the unique identifier (UUID) of the managed object that you want to delete.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingClientCertificates:
    get:
      summary:  To list pending certificates that are pushed to the server from a client device for secure communication with IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    post:
      summary:  To accept the client communication certificate that was pushed to the IBM Security Guardium Key Lifecycle Manager server from a client device for secure communication.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/penacceptPendingClientCertificatepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingClientCertificates/{uuid}:
    delete:
      summary:  To reject the certificate that is pushed to the server from a client device.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Specify the universal unique identifier of the certificate in the IBM Security Key Lifecycle Manager database, such as CERTIFICATE-a3862239-a367-41ff-97a1-0ca72cfa08e8.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingDevices:
    post:
      summary:  To accept a device from a pending list.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/penacceptPendingDevicepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    get:
      summary:  To obtain a list of all the pending devices. 
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Specify a device group. <br>You can specify one of the following values - <br>LTO, 3592, DS5000, DS5000_TCT, DS8000, BRCD_ENCRYPTOR, ONESECURE, ETERNUS_DX, XIV GPFS, PEER_TO_PEER, GENERIC, userdevicegroup.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingDevices/{uuid}:
    delete:
      summary:  To reject a device request to communicate with IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: uuid
          required: true
          schema:
            type: string
          description: Required. Specify the unique universal identifier for the pending device. Use the Machine Device List REST Service to locate the UUID.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingMachineDevices:
    get:
      summary:  To obtain a list of all the pending devices.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingMachineDevices/accept:
    post:
      summary:  To accept a pending machine-to-device relationship request.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/penacceptPendingMachineDevicepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/pendingMachineDevices/reject:
    post:
      summary:  To reject a machine-to-device relationship request.
      tags:
        - Pending object management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/penrejectPendingMachineDevicepost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicate/now:
    post:
      summary:  To immediately run the IBM Security Guardium Key Lifecycle Manager replication task, and to force a backup to be sent to the configured clones.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repreplicationNowpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicate/start:
    post:
      summary:  To start the replication server for replicating the current IBM Security Guardium Key Lifecycle Manager active files on clone servers based on a configured schedule.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicate/status:
    get:
      summary:  To obtain information about the IBM Security Guardium Key Lifecycle Manager replication task, such as operational status and replication schedules.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicate/stop:
    post:
      summary:  To stop the replication server so that the current IBM Security Guardium Key Lifecycle Manager active files and data are not replicated to the clone servers.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicationConfigProperties:
    get:
      summary:  To retrieve one or more comma seperated property values from Replication Config file.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: properties
          required: false
          schema:
            type: string
          description: Specify the replication configuration property names that you want to retrieve. You can specify multiple comma-separated property names.
        - in: query
          name: properties
          required: false
          schema:
            type: string
          description: Specify the replication configuration property names that you want to retrieve. You can specify multiple comma-separated property names.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update one or more properties in the ReplicationSKLMConfig.properties configuration file to control the replication operation.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repupdateConfigurationput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete one or more properties from the ReplicationSKLMConfig.properties configuration file to control the replication operation.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/repdeleteConfigPropertydelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/replicationConfigProperties/{propertyName}:
    get:
      summary:  To get single property value from the Replication Config file.
      tags:
        - Replication
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: propertyName
          required: true
          schema:
            type: string
          description: Specify the name of the replication configuration property for which you want to retrieve the value.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/archive/servedData:
    post:
      summary:  To archive Dev-Audit table data.
      tags:
        - Served data archival
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/servedData:
    get:
      summary:  To get served data list.
      tags:
        - Served data archival
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: attributeName
          required: false
          schema:
            type: string
          description: Optional. <br> alias1 - Specify a default alias for a certificate that is used by a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>&nbsp;&nbsp; 3592 tape drive - The value is optional for a 3592 tape drive and specifies the primary certificate that the device in the 3592 device family uses. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. <br>&nbsp;&nbsp; DS8000 Turbo drive - The value is optional for a DS8000 Turbo drive and matches the label "Primary certificate for image" in the graphical user interface panels for a DS8000 Turbo drive. <br>&nbsp;&nbsp; Use Device Group Attribute List REST Service and Device Group Attribute Update REST Service to view and change the value. This value was previously stored in the obsolete configuration parameter drive.default.alias1. <br> alias2 - Used for a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>&nbsp;&nbsp; 3592 tape drive - This attribute specifies a default alternative alias for a 3592 tape drive. This value can be the same, or different from the value that is specified for the primary certificate. The value specifies the secondary certificate that the device in the 3592 device family uses if the primary certificate is not available. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. <br>&nbsp;&nbsp; DS8000 Turbo drive - For a device in the DS8000 device family, the value specifies a secondary certificate that is available for use. For example, you might use this certificate to unlock a DS8000 Turbo drive in the case of a dead-lock condition. Use Device Group Attribute List REST Service and Device Group Attribute Update REST Service to view and change the value. This value was previously stored in the obsolete configuration parameter drive.default.alias2. <br>&nbsp;&nbsp; dki - Data key identifier, used only for an LTO tape drive. 
        - in: query
          name: attributeValue
          required: false
          schema:
            type: string
          description: Optional. Identifies the served data. For example, if attributeName is alias1, then attributeValue might be cert1.
        - in: query
          name: volser
          required: false
          schema:
            type: string
          description: Optional. Specify the volume and serial number of a tape cartridge.
        - in: query
          name: usage
          required: false
          schema:
            type: string
          description: Optional. Specify one of the following values - LTO, 3592, DS5000, DS8000, GPFS, BRCD_ENCRYPTOR, ONESECURE, XIV, userdevicegroup.
        - in: query
          name: dateAfter
          required: false
          schema:
            type: string
          description: Optional. If you specify only this date, list the audits that are made after this date. Hyphens are required in the date value. <br> To list audits that are made between the before and after dates, specify both values. <br> Format for the date is YYYY-MM-DD.
        - in: query
          name: dateBefore
          required: false
          schema:
            type: string
          description: Optional. If you specify only this date, list the audits that are made before this date. Hyphens are required in the date value. <br> To list audits that are made between the before and after dates, specify both values. <br> Format for the date is YYYY-MM-DD.
        - in: query
          name: kmipClientCertUUID
          required: false
          schema:
            type: string
          description: Optional. Specify UUID of the KMIP client certificate.
        - in: query
          name: serialNumber
          required: false
          schema:
            type: string
          description: Optional. Specify the device serial number.
        - in: query
          name: offset
          required: false
          schema:
            type: string
          description: Optional. Specify the page number from which the records are displayed based on the value that you specify for count.
        - in: query
          name: count
          required: false
          schema:
            type: string
          description: Optional. Specify the number of records to display on the page that you specified with offset. The count must not exceed 2000 records.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/configProperties:
    get:
      summary:  To retrieve one or more properties from the SKLMConfig.properties configuration file.
      tags:
        - Server configuration
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: properties
          required: false
          schema:
            type: string
          description: Specify the configuration property names that you want to retrieve.You can specify multiple comma-separated properties.
        - in: query
          name: properties
          required: false
          schema:
            type: string
          description: Specify the configuration property names that you want to retrieve.You can specify multiple comma-separated properties.
        - in: query
          name: type
          required: false
          schema:
            type: string
          description: Use this parameter to fetch property value from the MMConfig.properties configuration file.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    put:
      summary:  To update one or more properties in the SKLMConfig.properties file that controls the IBM Security Guardium Key Lifecycle Manager server operations.
      tags:
        - Server configuration
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/conupdateConfigurationput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
    delete:
      summary:  To delete one or more properties from the SKLMConfig.properties file, which controls the IBM Security Guardium Key Lifecycle Manager server operations.
      tags:
        - Server configuration
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/condeleteConfigPropertydelete'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/configProperties/{propertyName}:
    get:
      summary:  To retrieve a specific property from the SKLMConfig.properties configuration file.
      tags:
        - Server configuration
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: propertyName
          required: true
          schema:
            type: string
          description: Specifies the name of the configuration property for which you want to retrieve the value.
        - in: query
          name: type
          required: false
          schema:
            type: string
          description: Use this parameter to fetch property value from the MMConfig.properties configuraton file.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/changePassword/db2/multimaster:
    put:
      summary:  To change Db2 Password in Multi-Master cluster.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmchangeDB2PasswordMultimasterput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/changePassword/db2/standalone:
    put:
      summary:  To change Db2 Password of standalone IBM Security Guardium Key Lifecycle Manager.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmchangeDB2PasswordStandaloneput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/counts:
    get:
      summary:  To get the counts of various cryptographic objects or devices from the IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: countType
          required: false
          schema:
            type: string
          description: Optional. Specify the count type for which you must obtain the count. Counts for all the count types are returned if you do not specify this parameter. You can specify multiple comma-separated values.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/counts/{countType}:
    get:
      summary:  To get count of single or multiple cryptographic objects.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: path
          name: countType
          required: true
          schema:
            type: string
          description: Optional. Specify the count type for which you must obtain the count. Counts for all the count types are returned if you do not specify this parameter. You can specify multiple comma-separated values.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/kerberos/configure:
    post:
      summary:  Use Configure Kerberos Authentication REST Service to configure IBM Security Guardium Key Lifecycle Manager to use Kerberos as the authentication mechanism with the Db2 database.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmconfigureKerberospost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/kerberos/configureOnMM:
    post:
      summary:  Use Configure Kerberos on Multi-Master Cluster REST Service to configure all the master servers of the cluster to use Kerberos authentication with the Db2 database.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmconfigureKerberosOnMMpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/kerberos/getConfiguration:
    get:
      summary:  Use Get Kerberos Configuration REST Service to retrieve details of the Kerberos configuration on the server.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/kerberos/remove:
    post:
      summary:  Use Remove Kerberos Configuration REST Service to delete the existing Kerberos configuration from the server.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmremoveKerberosConfigpost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/servermanagement/restartServer:
    post:
      summary:  To restart Websphere server.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/versionInfo:
    get:
      summary:  To obtain version information of installed IBM Security Guardium Key Lifecycle Manager and its components.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/keyServerStatus:
    get:
      summary:  To obtain the status of the key server, an internal component of the IBM Security Guardium Key Lifecycle Manager server.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/systemDetails:
    get:
      summary:  To request IBM Security Guardium Key Lifecycle Manager server configuration details.
      tags:
        - Server management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: systemDetailType
          required: false
          schema:
            type: string
          description: Optional. Specify the configuration detail of the IBM Security Key Lifecycle Manager server. All the configuration details of the server are returned if this parameter is not specified.<br>You can specify any of the following values IPAddr, keyStoreInitialized, TCPTransportsInitialized, SSLTransportsInitialized, TCPport, SSLConfigured, SSLport, KMIPConfigured, KMIPSSLport, KMIPStatus.<br>You can specify multiple comma-separated values.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/trustStoreCertificates:
    get:
      summary:  To list certificates that are present in the IBM Security Guardium Key Lifecycle Manager internal truststore.
      tags:
        - Truststore management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
        - in: query
          name: alias
          required: false
          schema:
            type: string
          description: Optional. Specify a unique name for the certificate. <br>To list all certificates, do not specify an alias.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/trustStoreCertificates/addCertToTrustStore:
    put:
      summary:  To add a certificate to the IBM Security Guardium Key Lifecycle Manager truststore.
      tags:
        - Truststore management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/truaddTrustStoreCertput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/trustStoreCertificates/deleteCertFromTrustStore:
    put:
      summary:  To delete a certificate from the IBM Security Guardium Key Lifecycle Manager truststore.
      tags:
        - Truststore management
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trudeleteTrustStoreCertput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
  /SKLM/rest/v1/ckms/userpassword:
    put:
      summary:  To change the Password of logged in User.
      tags:
        - User Administration
      security:
        - SKLM: []
      parameters:
        - in: header
          name: Accept-Language
          schema:
            type: string
            enum:
              - en
              - de
              - es
              - fr
              - it
              - ja
              - ko
              - zh-CN
              - zh-TW
          required: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ckmchangePasswordput'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error200'
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error201'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error400'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/responses/Error500'
components:
  schemas:
    ckmbackupRunpost:
      type: object
      properties:
        backupDirectory:
          type: string
          description: The directory where the JAR files are stored. <br>The default directory is SKLM_HOME/backup.
        description:
          type: string
          description: To include more information about the purpose or use of the backup file.
        databaseBackupDirectory:
          type: string
          description: The directory in the IBM Security Guardium Key Lifecycle Manager database to include temporary backup data for IBM SecurityGuardium Key Lifecycle Manager. <br>The default value is the value of the tklm.backup.db2.dir property in the datastore.properties file.
        password:
          type: string
          description: A password to encrypt data in the backup file. <br>The value can range between a minimum of 6 and a maximum of 32 characters.
        replica:
          type: string
          description: To specify whether this backup is taken for replication. <br>If you specify y, the replication configuration fileis backed up. <br>The default is n.
      required:
    ckmbackupRunRestorepost:
      type: object
      properties:
        backupFilePath:
          type: string
          description: Specify the full path and file name that contains backup data. "<br>To determine this directory, examine the value of the tklm.backup.dir property in the SKLMConfig.properties file.
        password:
          type: string
          description: Specify the password to restore data from the backup file if IBM Security Guardium Key Lifecycle Manager uses a password-based encryption method.
      required:
        - backupFilePath
    cerupdateCertAttributesput:
      type: object
      properties:
        attrName:
          type: string
          description: Specify the name that you can use to identify or locate the attribute pair as an object. You can specify the following attributes - <br> applicationSpecificInformation" <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies application namespace information as a Key Management Interoperability Protocol attribute. <br> contactInformation<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies contact information as a Key Management Interoperability Protocol attribute.<br> cryptoParams cryptoparameter1, cryptoparameterN<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the cryptographic parameters that you use for cryptographic operations by using the object. This attribute is a Key Management Interoperability Protocol attribute.<br> customAttribute<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies a custom attribute in string format as a Key Management Interoperability Protocol attribute. Client-specific attributes must start with the characters "x-" (x hyphen) and server-specific attributes must start with "y-" (y hyphen). <br>link <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the link from one managed cryptographic object to another, closely related target managed cryptographic object. This attribute is a Key Management Interoperability Protocol attribute. <br>name <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the name that you use to identify or locate the object. This attribute is a Key Management Interoperability Protocol attribute. <br>objectGroup <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies one or more object group names of which this object might be part. This attribute is a Key Management Interoperability Protocol attribute.
        uuid:
          type: string
          description: Specify one of these valid operations to run on an attribute value - add, update, or delete.
        operation:
          type: string
          description: Specify one of these valid operations to run on an attribute value - add, update, or delete.
        index:
          type: string
          description: Specify the index to update or delete an attribute value.
        attrValue:
          type: string
          description: Conditional. Specify one or more of these key value pairs to add or update - <br>applicationSpecificInformation applicationIDstring <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies application namespace information as the value of applicationIDstring. <br>&nbsp;&nbsp;&nbsp;&nbsp; NAMESPACE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application namespace. <br>&nbsp;&nbsp;&nbsp;&nbsp; INFO <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application namespace information. <br>contactInformation contactstring <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies contact information as the value of contactstring. This attribute is a Key Management Interoperability Protocol attribute. <br>&nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Contact information. <br>cryptoParams cryptoparameter1, cryptoparameterN <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the cryptographic parameters that you use for cryptographic operations by using the object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; MODE <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CBC, ECB, PCBC, CFB, OFB, CTR, CMAC, CCM, GCM, CBC_MAC, XTS, AES_KEY_WRAP_PADDING, X9_102_AESKW, X9_102_TDKW, X9_102_AKW1, X 9_102_AKW2 <br> &nbsp;&nbsp;&nbsp;&nbsp; PAD <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NONE, OAEP, PKCS5, SSL3, ZEROS, ANSI_X9_23, ISO_10126, PKCS1_ V1_5, X9_31, PSS <br> &nbsp;&nbsp;&nbsp;&nbsp; HASH <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MD2, MD4, MD5, SHA1, SHA224, SHA256, SHA384, SHA512 <br>  &nbsp;&nbsp;&nbsp;&nbsp; ROLE <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BDK, CVK, DEK, MKAC, MKSMC, MKSMI, MKDAC, MKDN, MKCP, MKOTH, KEK, MAC1660 9, MAC97971, MAC97972, MAC97973, MAC97974, MAC97975, ZPK, PVKIBM, PVKPVV, PVKOTH <br>customAttribute customstring <br>&nbsp;&nbsp;&nbsp;&nbsp; Specifies for the value of customstring a custom attribute in string format as a Key Management Interoperability Protocol attribute. Client-specific attributes must start with the characters "x-" (x hyphen) and server-specific attributes must start with "y-" (y hyphen). <br> &nbsp;&nbsp;&nbsp;&nbsp; NAME <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Client or server attribute name. <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value of the attribute name. <br>link objectname, objectnametarget <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the link from one managed cryptographic object to another, closely related target managed cryptographic object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; TYPE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CERTIFICATE, PRIVATE_KEY, PUBLIC_KEY, DERIVATION_BASE_OBJECT, DERIVED_KEY, REPLACEMENT_OBJECT, REPLACED_OBJECT <br>&nbsp;&nbsp;&nbsp;&nbsp; LINKED_OBJECT_ID <br>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Specify the target uuid of the linked object. <br>name <br> Specifies the name that you to identify or locate the object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; TYPE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TEXT, URI <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name, or URI identifying the object. <br>objectGroup objectgroupname1, objectgroupnameN <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies for objectgroupname1, objectgroupnameN the values of one or more object group names of which this object might be part. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br>  &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Object group name.
      required:
        - attrName
        - uuid
        - operation
    cercertificateDefaultRolloverAddpost:
      type: object
      properties:
        alias:
          type: string
          description: Specify a name (not case-sensitive) of the existing certificate.
        certDefaultType:
          type: string
          description: Specify whether the certificate is used as the system default or partner certificate, or both. You can include the following values -<br> 1 - Certificate is the system default.<br> 2 - Certificate is the partner certificate.<br> 3 - Certificate is used as both the system default and the partner certificate. 
        usage:
          type: string
          description: Required. Specify the device group. <br>You can include the following values - 3592 and userdevicegroup.
        effectiveDate:
          type: string
          description: Specify the rollover date on which the certificate becomes the default system or partner certificate. <br>The value is a current or future date in yyyy-MM-dd format.
      required:
        - alias
        - certDefaultType
        - usage
        - effectiveDate
    cercreateCertificatepost:
      type: object
      properties:
        type:
          type: string
          description: Specify the certificate type. The supported certificate type is Self-signed. <br>The subject name and issuer name of the certificate are same.
        alias:
          type: string
          description: Specify a unique name for the certificate. The name is not case-sensitive.
        cn:
          type: string
          description: Specify a common name for the certificate that you want to create.
        usage:
          type: string
          description: Specify the target application usage such as SSLSERVER. <br>You can specify the following values - 3592, DS8000, GPFS, PEER_TO_PEER, GENERIC, SSLCLIENT, SSLSERVER, userdevicegroup.
        algorithm:
          type: string
          description: Specify any of the following cryptographic algorithms that the certificate can use. <br>Valid value - RSA
        ou:
          type: string
          description: Specify the organizational unit name.
        o:
          type: string
          description: Specify the organizational name.
        country:
          type: string
          description: Specify the country name. Indicate the name as a two-letter country code.
        validity:
          type: string
          description: Specify the days during which the certificate is valid.<br> The interval can range from 1 day to 9000 days.
      required:
        - type
        - alias
        - cn
        - usage
        - algorithm
        - validity
    cerexportCertificatesput:
      type: object
      properties:
        uuid:
          type: string
          description: Specify the Universal Unique Identifier of the certificate.
        fileName:
          type: string
          description: Specify the path and file name to which the certificate is exported.<br> <br>If you specify no path or a relative path, the command appends the file and the path to the SKLM_HOME directory if you specify it.<br> <br>If you specify an absolute path, the file is stored in that path; it is not relative to the SKLM_HOME directory.
        format:
          type: string
          description: Specify any of the following formats for file content- base64, DER (Distinguished Encoding Rules)
      required:
        - uuid
        - fileName
    cerimportCertificatespost:
      type: object
      properties:
        fileName:
          type: string
          description: Specify the file name to import certificate data. <br>The imported file is stored in IBM Security Guardium Key Lifecycle Manager in a keystore location relative to the SKLM_HOME directory.
        alias:
          type: string
          description: CertificateResource.importCertificates.alias
        usage:
          type: string
          description: Specify the target application usage such as SSLSERVER. <br> You can specify the following values - 3592, DS8000, GPFS, PEER_TO_PEER, GENERIC, SSLCLIENT, SSLSERVER, SYSLOG, userdevicegroup
        format:
          type: string
          description: Specify any of the following formats for file content - base64, DER (Distinguished Encoding Rules),  PEM (Privacy Enhanced Mail).
        deviceRole:
          type: string
          description: Specify the device role. Valid values are - owner and partner.
      required:
        - fileName
        - alias
        - usage
    cerupdateCertificatesput:
      type: object
      properties:
        uuid:
          type: string
          description: Specify the universal unique identifier of the certificate.
        attributes:
          type: string
          description: Specify one or more of the following attribute-value pairs -<br> <br>compromised - Specifies whether the use is compromised. The only value is y (compromised). You cannot change a compromised key or certificate to an uncompromised state. information informationstring - Specifies more information about the use of an object.<br> trusted [y|n] - Specifies whether the use is trusted. Set this value to y to mark the key or certificate as trusted. Or, set a value of n to mark the key or certificate as not trusted. You cannot set compromised or expired keys or certificates to be trusted.<br>
        usage:
          type: string
          description: Specify the target application usage such as SSLSERVER. You can specify the following values - 3592, DS8000, GPFS, PEER_TO_PEER, GENERIC, SSLCLIENT, SSLSERVER, userdevicegroup.
      required:
        - uuid
    cerupdateClientCertCredsput:
      type: object
      properties:
        oldAlias:
          type: string
          description: Specify the alias of the old client certificate. 
        newAlias:
          type: string
          description: Specify the alias of the new client certificate.
      required:
        - oldAlias
        - newAlias
    cerbulkCertUpdateput:
      type: object
      properties:
        fileName:
          type: file
          description: Specify the new certificate file. Ensure that the certificate is trusted in IBM Security Guardium Key Lifecycle Manager.
      required:
        - fileName
    clicreateClientpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client that you want to create.
      required:
        - clientName
    cliupdateClientNameput:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client that you want to update.
        newClientName:
          type: string
          description: Specify the new name of the client.
      required:
        - clientName
        - newClientName
    cliassignClientCertput:
      type: object
      properties:
        certUseOption:
          type: string
          description: Specify the option that you want to use to assign the certificate to the client. <br>Specify one of the following values - ACCEPT_PENDING_CERT - To accept the client communication certificate that was pushed to the IBM Security Guardium Key Lifecycle Manager server from a client device for secure communication <br>IMPORT_CERT - To import a certificate and assign it to the client <br>USE_EXISTING - To assign an existing certificate to the client
        certAlias:
          type: string
          description: Specify the alias of the certificate that you want to assign to the client.
        certUUID:
          type: string
          description: Required only if you specify ACCEPT_PENDING_CERT as the option for the certUseOption property. Specify the universal unique identifier of the certificate that you want to accept and import.
        importPath:
          type: string
          description: Required only if you specify IMPORT_CERT as the option for the certUseOption property. <br>Specify the complete path of the certificate file to be imported. <br>For example, C:/Program Files/IBM/WebSphere/AppServer/products/sklm/data/clientCert.cer
      required:
        - certUseOption
        - certAlias
    cliassignUserstoClientput:
      type: object
      properties:
        users:
          description: Specify names of the users that you want to assign to the client. For multiple users, provide an array of the user names. <br> For example, users=["user1", "user2", "user3"]
          type: array
          items:
            type: string
      required:
        - users
    cliremoveUserstoClientput:
      type: object
      properties:
        users:
          description: Specify names of the users that you want to remove from the client. For multiple users, provide an array of the user names. <br> For example, users=["user1", "user2", "user3"]
          type: array
          items:
            type: string
      required:
        - users
    clicreateGrouppost:
      type: object
      properties:
        groupName:
          type: string
          description: Specify the name of the client group that you want to create.
      required:
        - groupName
    cliassignClientsToGroupput:
      type: object
      properties:
        clients:
          type: string
          description: Specify names of the clients that you want to assign to the group. Use a comma-separated list for multiple clients. For example - TestClient1,TestClient2.
      required:
        - clients
    cliremoveClientsFromGroupput:
      type: object
      properties:
        clients:
          type: string
          description: Specify names of the clients that you want to remove from the client group. Use a comma-separated list for multiple clients. For example - TestClient1, TestClient2.
      required:
        - clients
    cliupdateGroupNameput:
      type: object
      properties:
        clientGroupName:
          type: string
          description: Specify the name of the client group that you want to update.
        newClientGroupName:
          type: string
          description: Specify the new name of the client group.
      required:
        - clientGroupName
        - newClientGroupName
    objstoreSymmetricKeyObjectpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client.
        prefixName:
          type: string
          description: Specify the prefix that is used to create the alias.
        numberOfObjects:
          type: string
          description: Specify the number of symmetric keys that you want to create or register. Default value - 1.
        algorithm:
          type: string
          description: Specify the algorithm to create symmetric key. Default value - AES. Other possible value -3DES.
        bitLength:
          type: string
          description: Specify the size of the key.For AES algorithm - Default value - 256 <br>Other possible values - 128,192. <br>For 3DES algorithm - Possible values - 112, 168.
        cryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the symmetric key is to be used. <br>Default value - Encrypt. Other possible values - Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify
        keyBlock:
          $ref: '#/components/schemas/objstoreSymmetricKeyObjectpostkeyBlock'
      required:
        - clientName
        - prefixName
    objstoreSymmetricKeyObjectpostkeyBlock:
      type: object
      properties:
        keyFormat:
          type: string
          description: Specify the format value of the symmetric key. <br>Default value - RAW. Other possible value - TRANSPARENT_SYMMETRIC_KEY.
        keyMaterial:
          type: string
          description: Specify the key material value of the symmetric key in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreCertificateObjectpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client.
        prefixName:
          type: string
          description: Specify the prefix that is used to create the alias. 
        algorithm:
          type: string
          description: Specify the algorithm that is used in the public key. Default value - RSA <br>Other possible value - DSA.
        bitLength:
          type: string
          description: Specify the size of the public key. <br>Default value - 2048. <br>You can specify all other possible values for RSA and DSA algorithms.
        certCryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the certificate is to be used. <br>Default value - Encrypt. Other possible values - Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify, Wrap, Unwrap, Wrap_Unwrap.
        publicKeyCryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the public key is to be used. <br>Default value - Encrypt. Other possible values - Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify, Wrap, Unwrap, Wrap_Unwrap
        certificateBlock:
          $ref: '#/components/schemas/objstoreCertificateObjectpostcertificateBlock'
        publicKeyBlock:
          $ref: '#/components/schemas/objstoreCertificateObjectpostpublicKeyBlock'
      required:
        - clientName
        - prefixName
    objstoreCertificateObjectpostcertificateBlock:
      type: object
      properties:
        certFormat:
          type: string
          description: Optional. Specify the format value of the certificate. Default value - X509.
        certMaterial:
          type: string
          description: Required. Specify the certificate material value in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreCertificateObjectpostpublicKeyBlock:
      type: object
      properties:
        publicKeyFormat:
          type: string
          description: Optional. Specify the format value of the public key. <br>Default value - X509. Other possible value - PKCS1.
        publicKeyMaterial:
          type: string
          description: Required. Specify the key material value of the public key in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreKeyPairObjectpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client.
        prefixName:
          type: string
          description: Specify the prefix that is used to create the alias.
        numberOfObjects:
          type: string
          description: Specify the number of public-private key pair objects that you want to create and assign to the client.<br>Default value - 1.
        publicKeyCryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the public key is used. <br>Default value - Verify. Other possible values - Encrypt, Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify, Wrap, Unwrap, Wrap_Unwrap
        privateKeyCryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the private key is to be used. <br>Default value - Sign. Other possible values - Encrypt, Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify, Wrap, Unwrap, Wrap_Unwrap
        algorithm:
          type: string
          description: Specify the algorithm to create the cryptographic object. <br>Default value - RSA. Other possible value - DSA.
        bitLength:
          type: string
          description: Specify the size of the managed object. <br>Default value - 2048. You can specify all other possible values for RSA and DSA algorithms.
        privateKeyBlock:
          $ref: '#/components/schemas/objstoreKeyPairObjectpostprivateKeyBlock'
        publicKeyBlock:
          $ref: '#/components/schemas/objstoreKeyPairObjectpostpublicKeyBlock'
      required:
        - clientName
        - prefixName
        - privateKeyMaterial
    objstoreKeyPairObjectpostprivateKeyBlock:
      type: object
      properties:
        privateKeyFormat:
          type: string
          description: Optional. Specify the format value of the private key. <br>Default value - PKCS8. Other possible value - PKCS1.
        privateKeyMaterial:
          type: string
          description: Required. Specify the key material value of the private key in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreKeyPairObjectpostpublicKeyBlock:
      type: object
      properties:
        publicKeyFormat:
          type: string
          description: Specify the format value of the public key. Default value - X509. Other possible value - PKCS1.
        publicKeyMaterial:
          type: string
          description: Specify the key material value of the public key in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreSecretDataObjectpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client.
        prefixName:
          type: string
          description: Specify the prefix that is used to create the alias.
        cryptoUsageMask:
          type: string
          description: Specify the cryptographic usage for which the secret data is to be used. <br>Default value - Verify. Other possible values - Decrypt, Encrypt_Decrypt, Sign, Sign_Verify, Verify, Wrap, Unwrap, Wrap_Unwrap.
        bitLength:
          type: string
          description: Specify the size of the secret data object. Default value - 60.
        numberOfObjects:
          type: string
          description: Specify the number of secret data objects. Default value - 1.
        keyBlock:
          $ref: '#/components/schemas/objstoreSecretDataObjectpostkeyBlock'
      required:
        - clientName
        - prefixName
    objstoreSecretDataObjectpostkeyBlock:
      type: object
      properties:
        keyFormat:
          type: string
          description: Specify the format value of the secret data. Default value - OPAQUE.
        keyMaterial:
          type: string
          description: Specify the key material value in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    objstoreOpaqueObjsyectObjectpost:
      type: object
      properties:
        clientName:
          type: string
          description: Specify the name of the client.
        keyBlock:
          $ref: '#/components/schemas/objstkeyBlock'
      required:
        - clientName
        - keyMaterial
    objstkeyBlock:
      type: object
      properties:
        keyMaterial:
          type: string
          description: Specify the key material value of the opaque object in Hex string format. <br>For example - 3082010a0282010100ab7f161c0042496ccd6c6d4dadb919.
    conupdateConfigurationput:
      type: object
      properties:
        KMIPListener.ssl.port:
          type: string
          description: Specify the IBM Security Guardium Key Lifecycle Manager server configuration property.
      required:
        - KMIPListener.ssl.port
    condeleteConfigPropertydelete:
      type: object
      properties:
        propertyName:
          type: string
          description: Specify the configuration property names that you want to delete. <br>You can specify multiple comma-separated properties.
      required:
        - propertyName
    ckmchangeCertificateAliaspost:
      type: object
      properties:
        oldAlias:
          type: string
          description: Specifies the existing value of the alias for the certificate present in IBM Security Guardium Key Lifecycle Manager system.
        newAlias:
          type: string
          description: Specifies the new value to be set for the alias of the certificate. <br>This value must be unique in the IBM Security Guardium Key Lifecycle Manager system.
      required:
        - oldAlias
        - newAlias
    ckmrenewKeyAliaspost:
      type: object
      properties:
        oldAlias:
          type: string
          description: Specifies the existing value of the alias for the key that is present in the IBM Security Guardium Key Lifecycle Manager system.
        newAliasPrefix:
          type: string
          description: Specifies the value to be set for the alias of the key.
      required:
        - oldAlias
        - newAliasPrefix
    ckmrenewUUIDpost:
      type: object
      properties:
        type:
          type: string
          description: Specifies that the type of object. <br>You can provide the value key, certificate, client, ltokeygroup, device, deviceType.
        oldUUID:
          type: string
          description: Specifies the existing uuid value of object.
      required:
        - type
        - oldUUID
    ckmchangeNamepost:
      type: object
      properties:
        type:
          type: string
          description: Specifies that the user can change the name of a device serial number. <br>You can provide the value Device, Client, DeviceType, or LTOKeyGroup.
        oldName:
          type: string
          description: Specifies the existing value of the storage device serial number.
        newName:
          type: string
          description: Specifies the new value to be set for the storage device serial number.
      required:
        - type
        - oldName
        - newName
    devupdatetDeviceGroupAttributesput:
      type: object
      properties:
        name:
          type: string
          description: Specify a unique device group, such as LTO. <br>You can specify the following values - LTO, 3592, DS5000, DS8000, GPFS, PEER_TO_PEER, DS8000_TCT, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        attributes:
          type: string
          description: Specify one or more user-defined attribute-value pairs. <br>Use Device Group Attribute List REST Service to view the current value. <br>You have the following choices -<br> drive.default.alias1 - Specifies the system default certificate that a 3592 device uses if the device is not associated with another certificate.<br> drive.default.alias2 - Specifies the system partner certificate that a 3592 device uses if the device is not associated with another certificate.<br> enableKMIPDelete - Enables or disables KMIP delete requests. The klmAdminDeviceGroup permission permits administration, such as (create, view, delete) of a device group. Disabling this attribute when you create a device group prevents KMIP clients from deleting keys in the device group. The default is disabled (false). Use Device Group Attribute Update REST Service to modify this attribute.<br> symmetricKeySet - Specifies a key group to be used for a device group.<br> shortName - Specifies a short label that is usually a drive type, such as LTO. This label is used for any additional attributes that are required by an original equipment manufacturer.<br> longName - Specifies an extended descriptive name of a drive type, such as my division LTO. For example, this information might include business information.<br> AddNewCertsToPending - Specifies whether to add a certificate to the list of pending certificates that you can accept or reject before key serving occurs, or to add a certificate automatically to the certificate table for immediate key service upon request. The attribute applies to the GPFS and PEER_TO_PEER device groups and their extended device groups.<br> device.enableMachineAffinity - Specifies whether a specific device group is enabled to store the association of a device to an existing machine identifier in the Security Key Lifecycle Manager database. Valid values are true or false.<br> device.AutoPendingAutoDiscover - Adds a device that contacts Security Key Lifecycle Manager to a list of pending devices that you can accept or reject before key serving occurs. Or, adds a device automatically to the drive table for immediate key service upon request. The attribute applies only to predefined base device families, and not to user-defined device groups. You have the following choices - <br> 0 (manual) - Both the auto pending and auto discovery functions are off.<br> 1(auto accept) - The auto discovery function is on, and the auto pending function is off.<br> 2 (auto pending) - The auto pending function is on.
      required:
        - name
        - attributes
    devdeleteDeviceGroupAttributesdelete:
      type: object
      properties:
        name:
          type: string
          description: Specify a unique device group, such as LTO. <br>You can specify the following values - LTO, 3592, DS5000, DS8000, GPFS, PEER_TO_PEER, DS8000_TCT, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        attribute:
          type: string
          description: DeviceGroupAttributeResource.deleteDeviceGroupAttributes.attribute
      required:
        - name
        - attribute
    devcreateDeviceGrouppost:
      type: object
      properties:
        deviceFamily:
          type: string
          description: Specify an existing device family that IBM Security Guardium Key Lifecycle Manager provides. <br>You can specify the following device family - LTO, 3592, DS5000, GPFS, PEER_TO_PEER, GENERIC.
        device.enableMachineAffinity:
          type: string
          description: Specify the device groups in the DS5000 device family that enabled to store the association of a device to an existing system identifier in the IBM Security Guardium Key Lifecycle Manager database. <br>The values are true (enable) or false (disable). An instance of the property is stored for each device group.
        enableKMIPDelete:
          type: string
          description: Enables or disables KMIP delete requests. <br>Disabling this attribute when you create a device group prevents KMIP clients from deleting keys in the device group. <br>Default is false (disabled).
        longName:
          type: string
          description: Specify an extended descriptive name of a drive type, such as my division LTO. <br>For example, it might include business information.
        shortName:
          type: string
          description: Specify a short label that is usually a drive type such as LTO. <br>This property is used for any additional attributes that are needed by an original equipment manufacturer.
      required:
        - deviceFamily
    devcreateDevicepost:
      type: object
      properties:
        serialNumber:
          type: string
          description: Specify the serial number as an ASCII string. The value is case-sensitive. <br>You can use alphanumeric characters and the special characters such as periods, spaces, dashes, semicolons, and underscore. <br>Do not use a space at the beginning or end of a serial number.<br> LTO tape drives - The serial number must be exactly 10, 12, or 24 characters in length. IBM Security Guardium Key Lifecycle Manager pads a serial number that is 10 characters in length with two leading zeros.<br>3592 tape drives and DS8000 Turbo drive - The case-sensitive value must be exactly 12 characters in length.<br>DS5000 storage servers - The serial number can vary 1- 48 characters in length. No padding occurs.
        type:
          type: string
          description: Specify any of the following device group - LTO, 3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        attributes:
          type: string
          description: Specify one or more attribute-value pairs. Their values are stored in the IBM Security Guardium Key Lifecycle Manager database. <br>aliasOne - Specifies a default alias for a certificate that is used by a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>3592 tape drive - Optional for a 3592 tape drive and specifies the primary certificate that the device uses if the secondary certificate is not available. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. <br>DS8000 Turbo drive - Optional for a DS8000 Turbo drive and matches the label "Primary certificate for image" in the graphical user interface panels for a DS8000 Turbo drive. <br>aliasTwo - Used for a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>3592 tape drive - A default alternative alias for a 3592 tape drive. This value can be the same or different from the value that is specified for the primary certificate. The value specifies the secondary certificate that the device in the 3592 device family uses if the primary certificate is not available. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. DS8000 Turbo drive -For a device in the DS8000 device family, the value specifies a secondary certificate that is available for use. For example, you might use this certificate to unlock a DS8000 Turbo drive in the case of a deadlock condition. <br>description - Specifies more information that describes the type of device or its purpose. <br>deviceText - Optional. Specifies the unique text with a minimum length greater than zero bytes and a maximum length of 96 bytes that describes a DS5000 storage server. <br>driveCert - Specifies the actual certificate that is used to identify the device in base64 encoded format. For current devices, this field is not in use. <br>keyPrefix - Specifies a key prefix as part of the key name. To add new keys, specify the prefix and number of keys. This value is used only for a device in the DS5000 device family. <br>machineID - Optional unless you want to add the association of a device to an existing machine identifier in the IBM Security Guardium Key Lifecycle Manager database. Specifies a unique machine ID for a DS5000 storage server, which is a concatenation of the worldwide name and the volume serial number. For example, specify 3042383030303437000000000000. <br>numberOfKeys - Specifies the number of keys to generate. The keys use the value of the keyPrefix attribute. The maximum number of keys is 12. If this value is not specified, the default value is 12 keys. This value is used only for a device in the DS5000 device family. <br>symAlias - Specifies an alias that is used to identify an existing key group for an LTO tape drive. The attribute is also used for DS5000 storage server to change or associate a new device key container. The value of symAlias is used to specify which symmetric key group is used to obtain a key for a new device media instance. If this attribute is not specified, then the value of the symmetricKeySet attribute is used. For backward compatibility with the Encryption Key Manager product, you can also specify the alias of an existing key entry. <br>worldwideName - Specifies the name of a device. This name is a nonsecure address that is used in combination with other device information, such as a serial number, to define devices and device paths. Specify a 16-character hexadecimal value that contains only the characters ABCDEFabcdef1234567890.
      required:
        - serialNumber
        - type
    devupdateDeviceput:
      type: object
      properties:
        uuid:
          type: string
          description: Specifies the universal unique identifier of the device. For example, DEVICE-74386920-148c-47b2-a1e2-d19194b315cf.
        type:
          type: string
          description: Specify a unique device group, such as myNewLTO. You can specify any of the following values - <br>LTO, 3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, GENERIC,ETERNUS_DX, XIV, userdevicegroup.
        attributes:
          type: string
          description: Specify one or more attribute-value pairs. Their values are stored in the IBM Security Guardium Key Lifecycle Manager database.<br> aliasOne - Specifies a default alias for a certificate that is used by a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>3592 tape drive - Optional for a 3592 tape drive and specifies the primary certificate that the device uses if the secondary certificate is not available. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. <br>DS8000 Turbo drive - Optional for a DS8000 Turbo drive and matches the label "Primary certificate for image in the graphical user interface panels for a DS8000 Turbo drive. <br>aliasTwo - Used for a 3592 tape drive or a DS8000 Turbo drive. Not used for an LTO tape drive or DS5000 storage server. <br>3592 tape drive - A default alternative alias for a 3592 tape drive. This value can be the same or different from the value that is specified for the primary certificate. The value specifies the secondary certificate that the device in the 3592 device family uses if the primary certificate is not available. If this attribute is not specified, the partner default certificate is used, as specified by a table entry for the device group in the IBM Security Guardium Key Lifecycle Manager database. DS8000 Turbo drive -For a device in the DS8000 device family, the value specifies a secondary certificate that is available for use. For example, you might use this certificate to unlock a DS8000 Turbo drive in the case of a deadlock condition. description - Specifies more information that describes the type of device or its purpose. <br>deviceText - Optional. Specifies the unique text with a minimum length greater than zero bytes and a maximum length of 96 bytes that describes a DS5000 storage server. <br>driveCert - Specifies the actual certificate that is used to identify the device in base64 encoded format. For current devices, this field is not in use. <br>keyPrefix - Specifies a key prefix as part of the key name. To add new keys, specify the prefix and number of keys. This value is used only for a device in the DS5000 device family. <br>machineID - Optional unless you want to add the association of a device to an existing machine identifier in the IBM Security Guardium Key Lifecycle Manager database. Specifies a unique machine ID for a DS5000 storage server, which is a concatenation of the worldwide name and the volume serial number. For example, specify 3042383030303437000000000000. <br>numberOfKeys - Specifies the number of keys to generate. The keys use the value of the keyPrefix attribute. The maximum number of keys is 12. If this value is not specified, the default value is 12 keys. This value is used only for a device in the DS5000 device family. <br>symAlias - Specifies an alias that is used to identify an existing key group for an LTO tape drive. The attribute is also used for DS5000 storage server to change or associate a new device key container. The value of symAlias is used to specify which symmetric key group is used to obtain a key for a new device media instance. If this attribute is not specified, then the value of the symmetricKeySet attribute is used.For backward compatibility with the Encryption Key Manager product, you can also specify the alias of an existing key entry. <br>worldwideName - Specifies the name of a device. This name is a nonsecure address that is used in combination with other device information, such as a serial number, to define devices and device paths. Specify a 16-character hexadecimal value that contains only the characters ABCDEFabcdef1234567890.
      required:
        - uuid
    ckmenableDeviceTypeMasterKeypost:
      type: object
      properties:
        enable:
          type: string
          description: Specify true if you want to enable the master key for the device group. Else, specify false.
        rotationPeriod:
          type: string
          description: Specify the rotation period in number of days. The value must be a positive integer. <br>This value defines the next due date of rotation of master key for the specified device group. <br>If you do not want the key to expire, specify the value as 0.
        algorithm:
          type: string
          description: Specify the algorithm with which the master key is to be created for the device group. The supported algorithm is AES.
        keySize:
          type: string
          description: Specify the size of the master key. The supported key sizes are 128-bit and 256-bit.
      required:
        - enable
    ckmrotateDGMKResourcespost:
      type: object
      properties:
        force:
          type: string
          description: Specify true if you want to enforce master key refresh for the device groups. <br>Else, specify false and the master key is refreshed only if the key rotation is due.
      required:
    ckmrotateDGMKResourcepost:
      type: object
      properties:
        force:
          type: string
          description: Specify true if you want to enforce master key refresh for the device groups. <br>Else, specify false and the master key is refreshed only if the key rotation is due.
      required:
    ckmexportRunpost:
      type: object
      properties:
        name:
          type: string
          description: Specifies the name of the device group that you want to export.
        password:
          type: string
          description: Specifies the password that you need to decrypt and import device group data.
        description:
          type: string
          description: Specifies the additional information that indicates purpose of the device group export file.
        exportDirectory:
          type: string
          description: Specifies the location to store the archive that contains device group data for exporting.
      required:
        - name
        - password
    ckmviewSummaryOfExportFileInADirectorypost:
      type: object
      properties:
        exportFilePath:
          type: string
          description: Specifies the export file name and location where the device group export file is stored.
        password:
          type: string
          description: Specifies the password for the export file that you need to decrypt the device group data.
      required:
        - exportFilePath
        - password
    keycreateGrouppost:
      type: object
      properties:
        usage:
          type: string
          description: Specify the device to which this key group is associated. For example, LTO.
      required:
        - usage
    keyupdateGroupput:
      type: object
      properties:
        usage:
          type: string
          description: Specify a unique device group, such as myNewLTO, with the following values - <br>LTO, DS5000, BRCD_ENCRYPTOR, ONESECURE, GENERIC, ETERNUS_DX, XIV, userdevicegroup.
        uuid:
          type: string
          description: Specify the universal unique identifier of the key group. <br>For example, KEYGROUP-74386920-148c-47b2-a1e2-d19194b315cf. <br>You must specify a value for either name or uuid. If both are specified, the values must match.
        name:
          type: string
          description: Specify the alias of the key group to update. You must specify a value for either name or uuid. <br>If both are specified, the values must match.
      required:
        - usage
    ckmimportRunpost:
      type: object
      properties:
        importFilePath:
          type: string
          description: Specifies the location of the export file that contains device group data for importing into current instance of IBM Security Guardium Key Lifecycle Manager.
        password:
          type: string
          description: Specifies the password that was used to encrypt the export file for importing and decrypting device group data into current instance of IBM Security Guardium Key Lifecycle Manager.
        ignoreDeviceGroupConflict:
          type: string
          description: Specify whether to ignore the device group conflict.
      required:
        - importFilePath
        - password
    ckmprovideImportConflictpost:
      type: object
      properties:
        importFilePath:
          type: string
          description: Specifies the location of the export file that contains device group data for importing into current instance of IBM Security Guardium Key Lifecycle Manager.
        password:
          type: string
          description: Specifies the password that was used to encrypt the export file for importing and decrypting device group data into current instance of IBM Security Guardium Key Lifecycle Manager.
      required:
        - importFilePath
        - password
    keykeyGroupDefaultRolloverAddpost:
      type: object
      properties:
        usage:
          type: string
          description: Specify the device group. You can include the following values - LTO, BRCD_ENCRYPTOR, userdevicegroup.
        keyGroupName:
          type: string
          description: Specify the case-sensitive name of an existing key group.
        effectiveDate:
          type: string
          description: Specify the rollover date on which the certificate becomes the default system or partner certificate. <br>The value is a current or future date in yyyy-MM-dd format.
      required:
        - usage
        - keyGroupName
        - effectiveDate
    keyaddKeyGroupEntrypost:
      type: object
      properties:
        entry:
          type: string
          description: Required. Specify the following unique identifier of the object or key to be added to the key group <br>uuid Unique universal identifier of the key. For example, uuid KEY-a3ce9230-bef9-42bd-86b7-6d208ec119cf. <br>To add multiple keys, specify comma-separated attribute-value pairs.
        name:
          type: string
          description: Specify a unique name of the existing group.
      required:
        - entry
        - name
    keydeleteKeyGroupEntrydelete:
      type: object
      properties:
        entry:
          type: string
          description: Required. Specify the following unique identifier of the object or key to be deleted from the key group <br>uuid Unique universal identifier of the key. For example, uuid KEY-a3ce9230-bef9-42bd-86b7-6d208ec119cf. <br>To delete multiple keys, specify comma-separated attribute-value pairs.
        name:
          type: string
          description: Specify a unique name of the existing group.
      required:
        - entry
        - name
    keycreateSecretKeypost:
      type: object
      properties:
        numOfKeys:
          type: string
          description: Specify the number of keys to create. If you specify a value for alias, also specify a value for this parameter. Default value is 1.
        alias:
          type: string
          description: Specify the key alias if aliasRange is not specified. You must also specify the value for numOfKeys. Specify the value for aliasRange if alias is not specified.
        aliasRange:
          type: string
          description: Specify the key alias if aliasRange is not specified. You must also specify the value for numOfKeys. Specify the value for aliasRange if alias is not specified.
        keyGroupUuid:
          type: string
          description: Specify the UUID of the key group.
        usage:
          type: string
          description: Specify the target application usage with any of the following values - LTO, DS5000, BRCD_ENCRYPTOR, ONESECURE, ETERNUS_DX, XIV, GPFS, PEER_TO_PEER, DS8000_TCT,GENERIC.
      required:
        - usage
    keyexportKeyput:
      type: object
      properties:
        fileName:
          type: string
          description: Specifies the relative or full path and the name of a file that IBM Security Guardium Key Lifecycle Manager creates to store the exported keys. <br>If you do not specify a path name, the value of SKLM_HOME directory is used.
        type:
          type: string
          description: Specifies whether the keys are secret or private. Valid values are secretkey, privatekey.
        alias:
          type: string
          description: Specifies an alias of the key that you export. This parameter is required if a value is not specified for the aliasRange parameter. <br>For a privatekey type, a value for alias is required. <br>For a secretkey type, you must specify a value for either alias or aliasRange.
        aliases:
          type: string
          description: This parameter is required if values are not specified for the alias and aliasRange parameters. <br>Specify comma-separated alias values for the keys that you want to export.
        aliasRange:
          type: string
          description: This parameter is required if a value is not specified for the alias parameter. <br>When the value of alias is specified, the value of aliasRange is ignored. <br>To export a secret key, specify a three character prefix followed by a range of numbers in hexadecimal format. <br>You can use the characters 0 through 9 and a through f. You can specify the range only for secret keys.
        keyAlias:
          type: string
          description: This parameter is required if the exported key is a secret key. <br>Specify the alias of the public key entry in the keystore that is used to encrypt the secret key or keys to the file. <br>Only the holder of the corresponding private key can access the keys.
        password:
          type: string
          description: This parameter is required if the value of the type parameter is privatekey. <br>Specify a password to protect the PKCS#12 file to which the private key and certificate are exported. <br>You might need to retain the value of the password to import the key.
      required:
        - fileName
        - type
    keyupdateKeyput:
      type: object
      properties:
        uuid:
          type: string
          description: Specify the universal unique identifier of the individual key that you want to update.
        usage:
          type: string
          description: The target application usage such as LTO device group. <br> You can specify the following values - LTO, 3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, ETERNUS_DX, XIV, GPFS, PEER_TO_PEER, DS8000_TCT, GENERIC, userdevicegroup.
        attributes:
          type: string
          description: Specify one or more of the following attribute-value pairs- <br>compromised - Specifies whether the use of a key is compromised. The only value is y (compromised). You cannot change a compromised key or certificate to an uncompromised state. <br>groupName - Specifies the name of a valid key group. You cannot move the last key in a default key group to a different group. You can change the key group name to a key group that is used by a different device group in the same device family if- The key group and its keys are not the default device group. The key group and its keys are not attached to a device. For example, you can change such a group from the myLTO device group to yourLTO device group in the LTO device family. In the DS5000 device family, a key group is generated for each DS5000 device when the device is created. You cannot create a DS5000 device with a key group attribute. However, you can create a new key group and specify the group name of a DS5000 device with the new key group. <br>information informationstring - Specifies more information about the use of an object. 
      required:
        - uuid
    keyimportKeypost:
      type: object
      properties:
        type:
          type: string
          description: Specifies whether the keys are secret or private. Valid values are secretkey, privatekey.
        fileName:
          type: string
          description: The path and file name of the file from which the keys are to be imported.
        usage:
          type: string
          description: The target application usage such as LTO device group. <br>You can specify the following values - LTO, 3592, DS5000, DS8000, BRCD_ENCRYPTOR, ONESECURE, ETERNUS_DX, XIV, GPFS, PEER_TO_PEER, DS8000_TCT, GENERIC, SSLCLIENT, SSLSERVER, userdevicegroup.
        password:
          type: string
          description: This parameter is required if the type parameter is privatekey. <br>This password was previously specified with the Key Export REST Service. <br>If you export private keys to a PKCS#12 file, ensure that the file with the key is wrapped with a FIPS-approved method before the file leaves the computer.
        keyAlias:
          type: string
          description: This parameter is required if the value of the type attribute is secretkey. <br>Specify the alias of the private key entry in the keystore that decrypts the secret key or keys, from the file. <br>Use the same alias value to import and export a secret key or keys.
        alias:
          type: string
          description: Required parameter in the following scenarios - <br>If the value of the type attribute is secretkey and you want to rename the key with the newAlias parameter during the import process. <br>Specify a value for this parameter if you want to import a specific secret key from a keystore file that has multiple secret keys. <br>If the value of the type attribute is privatekey and if the keystore file contains multiple private keys. <br>This parameter is not required when the keystore file contains only one private key. If you specify a value, it is ignored.
        newAlias:
          type: string
          description: Specify a new value for the key alias.
      required:
        - type
        - fileName
        - usage
    macaddMachineDevicepost:
      type: object
      properties:
        deviceUUID:
          type: string
          description: Specify a value for a unique universal identifier for the device, such as DEVICE-7d588437-e725-48bf-a836-00a47df64e78. <br>Use Device List REST Service to locate the device uuid.
        machineID:
          type: string
          description: Required if you do not specify the value of machineText. <br>Specify a unique ID in a range 1 - 48 characters. <br>For example - 3042383030303437000000000000. <br>Use Machine Identity List REST Service to locate machine identities.
        machineText:
          type: string
          description: Required if you do not specify the value of machineID. <br>Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for a machine, such as myEncryptedDS5000.
      required:
        - deviceUUID
    macdeleteMachineDevicedelete:
      type: object
      properties:
        deviceUUID:
          type: string
          description: Specify a value for a unique universal identifier for the device, such as DEVICE-7d588437-e725-48bf-a836-00a47df64e78. <br> Use Device List REST Service to locate the device uuid.
        machineID:
          type: string
          description: Required if you do not specify the value of machineText. <br>Specify a unique ID in a range 1 - 48 characters. <br>For example - 3042383030303437000000000000. <br>Use Machine Identity List REST Service to locate machine identities.
        machineText:
          type: string
          description: Required if you do not specify the value of machineID. <br>Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for a machine, such as myEncryptedDS5000.
      required:
        - deviceUUID
    macaddMachineIdentitypost:
      type: object
      properties:
        machineID:
          type: string
          description: Specify a unique ID in a range 1 - 48 characters. <br>For example - 3042383030303437000000000000. Use Machine Identity List REST Service to locate machine identities.
        machineText:
          type: string
          description: Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for a machine, such as myEncryptedDS5000.
      required:
        - machineID
    macdeleteMachineIdentitydelete:
      type: object
      properties:
        machineUUID:
          type: string
          description: Required if you do not specify the value of  machineText or machineID. <br>Specify a value for a unique universal identifier for the machine, such as MACHINE-bf57ca0d-1299-4bc7-9c9c-2fa29a99c7c9. <br>Use Machine List REST Service to locate the machine uuid.
        machineID:
          type: string
          description: Required if you do not specify the value of machineText or machineUUID. <br>Specify a unique ID in a range 1 - 48 characters. <br>For example - 3042383030303437000000000000. <br>Use Machine Identity List REST Service to locate machine identities.
        machineText:
          type: string
          description: Required if you do not specify the value of machineID or machineUUID. <br>Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for a machine, such as myEncryptedDS5000.
      required:
    macupdateMachineIdentityput:
      type: object
      properties:
        machineUUID:
          type: string
          description: Specify the unique universal identifier of the machine identity that you want to update. <br>Use Machine Identity List REST Service to locate the machine UUIDs.
        machineText:
          type: string
          description: Specify a unique, user-supplied descriptive label greater than zero bytes and not more than 96 bytes for the machine, such as myEncryptedDS5000.
      required:
        - machineUUID
        - machineText
    ckmcreateMasterKeypost:
      type: object
      properties:
        masterKeySize:
          type: string
          description: Specify length of the IBM Security Guardium Key Lifecycle Manager master key in bits. You can specify 128 or 256.
        source:
          type: string
          description: Specify the source keystore from where you want to move the master key. <br>The valid values are - Keystore or HSM. The values are case-insensitive.
        destination:
          type: string
          description: Specify the source keystore from where you want to move the master key. <br>The valid values are - Keystore or HSM. The values are case-insensitive.
      required:
        - masterKeySize
    ckmsendMasterKeypost:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/sendMasterKeypost'
      example:
        - ipHostname: string
          httpPort: string
          sklmUsername: string
          sklmPassword: string
    sendMasterKeypost:
      type: object
      properties:
        ipHostname:
          type: string
          description: Specify the IP address or host name of the IBM Security Guardium Key Lifecycle Manager server to which you want to transfer the master key.
        httpPort:
          type: string
          description: Specify the port number on which the IBM Security Guardium Key Lifecycle Manager server listens for requests from devices that communicate by using the SSL protocol.
        sklmUsername:
          type: string
          description: Specify the name of the IBM Security Guardium Key Lifecycle Manager administrator.
        sklmPassword:
          type: string
          description: Specify the password for the IBM Security Guardium Key Lifecycle Manager administrator.
      required:
        - ipHostname
        - httpPort
        - sklmUsername
        - sklmPassword
    ckmaddNodespost:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/addNodespost'
      example:
        - clusterName: string
          primaryHadrPort: string
        - type: string
          httpPort: string
          ipHostname: string
          sklmUsername: string
          sklmPassword: string
          wasUsername: string
          wasPassword: string
          standbyPriorityIndex: string
          autoaccept: string
    addNodespost:
      type: object
      properties:
        clusterName:
          type: string
          description: Specify a name for the Multi-Master cluster to which the masters to be added.
        primaryHadrPort:
          type: string
          description: Specify the port number for the HADR primary database. <br>You must specify the value for this property for the first time only when stand-alone IBM Security Guardium Key Lifecycle Manager instance is configured as "Primary" along with "Standby" or "Node".
        type:
          type: string
          description: Specify the IBM Security Guardium Key Lifecycle Manager server instance type. For example, Primary, Standby, or Node.
        httpPort:
          type: string
          description: Specify the port number on which the IBM Security Guardium Key Lifecycle Manager server server listens for requests from devices that communicate by using the SSL protocol.
        ipHostname:
          type: string
          description: Specify the host name of the IBM Security Guardium Key Lifecycle Manager server.
        sklmUsername:
          type: string
          description: Specify the name of the IBM Security Guardium Key Lifecycle Manager server administrator.
        sklmPassword:
          type: string
          description: Specify the password for the IBM Security Guardium Key Lifecycle Manager server administrator.
        wasUsername:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Guardium Key Lifecycle Manager server administrator profile.
        wasPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
        standbyPriorityIndex:
          type: string
          description: Specify the priority index value for the standby database to takeover when the primary database is down. <br>You can set the priority index to any value in the range 1-3. <br>The standby server with a higher priority index level (lower number) takes precedence over the lower-priority databases.
        autoaccept:
          type: string
          description: Specify whether the cluster automatically accepts the certificate of the master server that is being added. <br>This property has two values- true, false. <br>The default value is false, which indicates that the cluster does not automatically accept the certificate of the master server that is being added. 
      required:
        - clusterName
        - primaryHadrPort
        - type
        - httpPort
        - ipHostname
        - sklmUsername
        - sklmPassword
        - wasUsername
        - wasPassword
        - standbyPriorityIndex
        - autoaccept
    ckmremoveNodepost:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/removeNodepost'
      example:
        - clusterName: string
        - type: string
          ipHostname: string
    removeNodepost:
      type: object
      properties:
        clusterName:
          type: string
          description: Specify the name of the Multi-Master cluster from which the master to be removed.
        type:
          type: string
          description: Specify the IBM Security Guardium Key Lifecycle Manager server instance type. For example, Primary, or Standby, or Node.
        ipHostname:
          type: string
          description: Specify the host name of the IBM Security Guardium Key Lifecycle Manager server.
      required:
        - clusterName
        - type
        - ipHostname
    ckmupdateNodeWithConnectionValidationpost:
      type: object
      properties:
        ipHostname:
          type: string
          description: Specify the host name of the IBM Security Key Lifecycle Manager server server.
        httpPort:
          type: string
          description: Specify the port number on which the IBM Security Key Lifecycle Manager server server listens for requests from devices that communicate by using the SSL protocol.
        sklmUsername:
          type: string
          description: Specify the name of the IBM Security Key Lifecycle Manager server administrator.
        sklmPassword:
          type: string
          description: Specify the password for the IBM Security Key Lifecycle Manager server administrator.
        wasUsername:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Key Lifecycle Manager server administrator profile.
        wasPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
      required:
        - ipHostname
        - httpPort
        - sklmUsername
        - sklmPassword
        - wasUsername
        - wasPassword
    ckmpromoteAsPrimarypost:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/promoteAsPrimarypost'
      example:
        - clusterName: string
        - ipHostname: string
    promoteAsPrimarypost:
      type: object
      properties:
        clusterName:
          type: string
          description: Specify the Multi-Master cluster to which the standby master server belongs to.
        ipHostname:
          type: string
          description: Specify the host name of the IBM Security Guardium Key Lifecycle Manager server server.
      required:
        - clusterName
        - ipHostname
    ckmcheckPreRequisitepost:
      type: object
      properties:
        ipHostname:
          type: string
          description: Specify the IP address or host name of the master server.
        clusterName:
          type: string
          description: Specify the name of the Multi-Master cluster to which the master is added.
        sklmUsername:
          type: string
          description: Specify the name of the IBM Security Guardium Key Lifecycle Manager server administrator.
        sklmPassword:
          type: string
          description: Specify the password for the IBM Security Guardium Key Lifecycle Manager server administrator.
        wasUsername:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Guardium Key Lifecycle Manager server administrator profile.
        wasPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
        sklmUIPort:
          type: string
          description: Specify the port number on which the IBM Security Guardium Key Lifecycle Manager server listens for requests from devices that communicate by using the SSL protocol.
        autoaccept:
          type: string
          description: Specify whether the cluster automatically accepts the certificate of the master server that is being added. <br>This property has two values - true, false. <br>The default value is false, which indicates that the cluster does not automatically accept the certificate of the master server that is being added.
        hadrType:
          type: string
          description: Specify the IBM Security Guardium Key Lifecycle Manager server instance type. For example, Standby, or Node.
        standbyHadrPort:
          type: string
          description: Specify the HADR port of the standby server.
        standbyPriorityIndex:
          type: string
          description: Specify the priority index value for the standby database to takeover when the primary database is down. <br>You can set the priority index to any value in the range 1-3. <br>The standby server with a higher priority index level (lower number) takes precedence over the lower-priority databases.
      required:
        - ipHostname
        - clusterName
        - sklmUsername
        - sklmPassword
        - wasUsername
        - wasPassword
        - sklmUIPort
        - autoaccept
        - hadrType
    ckmchangeDB2PasswordStandaloneput:
      type: object
      properties:
        newDb2Password:
          type: string
          description: Specify the new Db2 password value.
      required:
        - newDb2Password
    ckmchangeDB2PasswordMultimasterput:
      type: object
      properties:
        newDb2Password:
          type: string
          description: Specify the new Db2 password value.
      required:
        - newDb2Password
    penacceptPendingClientCertificatepost:
      type: object
      properties:
        uuid:
          type: string
          description: Specify the universal unique identifier of the certificate in the IBM Security Guardium Key Lifecycle Manager database, such as CERTIFICATE-4e064e39-5c15-4e29-83ab-ebd4d275e148.
        alias:
          type: string
          description: Specify a unique name for the certificate.<br> The alias that is passed in the request, is the alias of the accepted certificate.<br> The name is not case-sensitive. For example, if you specify MY Cert1, the value is stored as my cert1. <br> Do not use -<br> The value that begins with 3 alphabetic characters followed by 18 numeric characters, such as aaa000000000000000002. IBM Security Guardium Key Lifecycle Manager uses this format to generate a key group with symmetric keys.<br> Forward slash or backslash characters in the value.
        deviceRole:
          type: string
          description: Specify the device role such as owner or partner.
        deviceGroup:
          type: string
          description: Specify the device group value such as PEER_TO_PEER.
      required:
        - uuid
        - alias
    penacceptPendingDevicepost:
      type: object
      properties:
        deviceUUID:
          type: string
          description: Specify the unique universal identifier for the device. <br>Use the Pending Machine Device List REST Service to locate the pending device UUID.
        usage:
          type: string
          description: Specify a device group. <br>You can specify one of the following values - <br>LTO, 3592, DS5000, DS5000_TCT, DS8000, BRCD_ENCRYPTOR, ONESECURE, ETERNUS_DX, XIV GPFS, PEER_TO_PEER, GENERIC, userdevicegroup.
      required:
        - deviceUUID
    penacceptPendingMachineDevicepost:
      type: object
      properties:
        deviceUUID:
          type: string
          description: Specify the unique universal identifier for the device. <br>Use the Pending Machine Device List REST Service to locate the pending device UUID.
        machineID:
          type: string
          description: Required if the value for the machineText property is not specified. <br>Specify the unique ID for the machine. Use the Pending Machine Device List REST Service to locate the pending machine IDs.
        machineText:
          type: string
          description: Required if the value for the machineID is not specified. <br>Specify the unique, descriptive label for the machine for which you want to accept the connection request. 
      required:
        - deviceUUID
    penrejectPendingMachineDevicepost:
      type: object
      properties:
        deviceUUID:
          type: string
          description: Specify the unique universal identifier for the pending device. <br>Use the Machine Device List REST Service to locate the UUID.
        machineUUID:
          type: string
          description: Specify the unique universal identifier for the machine. <br>Use the Machine Identity List REST Service to locate the UUID.
      required:
        - deviceUUID
        - machineUUID
    repupdateConfigurationput:
      type: object
      properties:
        backup.ClientIP1:
          type: string
          description: Specify the replication configuration property names and values that you want to update. <br>You can specify multiple comma-separated properties.
      required:
        - backup.ClientIP1
    repdeleteConfigPropertydelete:
      type: object
      properties:
        propertyName:
          type: string
          description: Specify the replication configuration property names that you want to delete. <br>You can specify multiple comma-separated properties.
      required:
        - propertyName
    repreplicationNowpost:
      type: object
      properties:
        replicationTargetFromConfig:
          type: string
          description: Conditional. If you specify the value yes, the values for the hostname and port are taken from the configuration file. <br>Else, you must specify the value for hostname and port.
        hostname:
          type: string
          description: Conditional. Specify the host name or IP of replication target. <br>If you specify this parameter the port parameter is required. <br>The value is ignored if the value of the replicationTargetFromConfig parameter is yes.
        port:
          type: string
          description: Conditional. Specify the port number to connect to the replication clone system. <br>If you specify this parameter, the hostname parameter is required. <br>The value is ignored if the value of the replicationTargetFromConfig parameter is yes.
      required:
    trudeleteTrustStoreCertput:
      type: object
      properties:
        alias:
          type: string
          description: Specify the alias of the certificate to be deleted.
      required:
        - alias
    truaddTrustStoreCertput:
      type: object
      properties:
        certFile:
          type: string
          description: Required. Specify the path to the certificate file to be added. <br>For example, /opt/IBM/WebSphere/AppServer/products/sklm/data/testcertificate.cer
        certFormat:
          type: string
          description: Required. Specify the format of the certificate to be added. Possible values - DER, BASE64.
        certAlias:
          type: string
          description: Required. Specify a unique name for the certificate. The name is not case-sensitive. <br>For example, if you specify MY Cert1, the value is stored as my cert1. <br>Do not use - A value that begins with 3 alphabetic characters followed by 18 numeric characters, such as aaa000000000000000002. <br>IBM Security Guardium Key Lifecycle Manager uses this format to generate a key group with symmetric keys. <br>Forward slash (/) or backslash () characters in the value.
      required:
        - certFile
        - certFormat
        - certAlias
    fillicenseUploadpost:
      type: object
      properties:
        fileToUpload:
          type: file
          description: FileTransferOperationsResource.licenseUpload.fileToUpload
      required:
        - fileToUpload
    filfileUploadpost:
      type: object
      properties:
        fileToUpload:
          type: file
          description: Specify the name of the file that you want to upload to the IBM Security Guardium Key Lifecycle Manager server.
        destination:
          type: string
          description: Specify the complete or absolute path of the directory on the IBM Security Guardium Key Lifecycle Manager server to which you want to upload the file. <br>By default, the file is uploaded to the SKLM_DATA directory.
      required:
        - fileToUpload
    ckmchangePasswordput:
      type: object
      properties:
        currentUserPassword:
          type: string
          description: Specify the current password of the logged in User.
        newUserPassword:
          type: string
          description: Specify the new password for the logged in User.
        confirmNewUserPassword:
          type: string
          description: Confirm the new password for the logged in User.
      required:
        - currentUserPassword
        - newUserPassword
        - confirmNewUserPassword
    keyupdateKeyAttributesput:
      type: object
      properties:
        attrName:
          type: string
          description: Specify the name that you can use to identify or locate the attribute pair as an object. You can specify the following attributes - <br> applicationSpecificInformation" <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies application namespace information as a Key Management Interoperability Protocol attribute. <br> contactInformation<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies contact information as a Key Management Interoperability Protocol attribute.<br> cryptoParams cryptoparameter1, cryptoparameterN<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the cryptographic parameters that you use for cryptographic operations by using the object. This attribute is a Key Management Interoperability Protocol attribute.<br> customAttribute<br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies a custom attribute in string format as a Key Management Interoperability Protocol attribute. Client-specific attributes must start with the characters "x-" (x hyphen) and server-specific attributes must start with "y-" (y hyphen). <br>link <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the link from one managed cryptographic object to another, closely related target managed cryptographic object. This attribute is a Key Management Interoperability Protocol attribute. <br>name <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the name that you use to identify or locate the object. This attribute is a Key Management Interoperability Protocol attribute. <br>objectGroup <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies one or more object group names of which this object might be part. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; processStartDate  <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies the date in yyyy-MM-dd format on which a symmetric key object can be used for process purposes. <br> &nbsp;&nbsp;&nbsp;&nbsp; protectStopDate   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies the date in yyyy-MM-dd format on which an object cannot be used for process purposes. <br> &nbsp;&nbsp;&nbsp;&nbsp; usageLimits   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies either total bytes (BYTE) or total objects (OBJECT) as a Key Management Interoperability Protocol attribute.
        uuid:
          type: string
          description: Specify the Universal Unique Identifier of the key.
        operation:
          type: string
          description: Specify one of these valid operations to run on an attribute value - add, update, or delete.
        index:
          type: string
          description: Specify the index to update or delete an attribute value.
        attrValue:
          type: string
          description: Conditional. Specify one or more of these key value pairs to add or update - <br>applicationSpecificInformation applicationIDstring <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies application namespace information as the value of applicationIDstring. <br>&nbsp;&nbsp;&nbsp;&nbsp; NAMESPACE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application namespace. <br>&nbsp;&nbsp;&nbsp;&nbsp; INFO <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Application namespace information. <br>contactInformation contactstring <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies contact information as the value of contactstring. This attribute is a Key Management Interoperability Protocol attribute. <br>&nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Contact information. <br>cryptoParams cryptoparameter1, cryptoparameterN <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the cryptographic parameters that you use for cryptographic operations by using the object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; MODE <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CBC, ECB, PCBC, CFB, OFB, CTR, CMAC, CCM, GCM, CBC_MAC, XTS, AES_KEY_WRAP_PADDING, X9_102_AESKW, X9_102_TDKW, X9_102_AKW1, X 9_102_AKW2 <br> &nbsp;&nbsp;&nbsp;&nbsp; PAD <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; NONE, OAEP, PKCS5, SSL3, ZEROS, ANSI_X9_23, ISO_10126, PKCS1_ V1_5, X9_31, PSS <br> &nbsp;&nbsp;&nbsp;&nbsp; HASH <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; MD2, MD4, MD5, SHA1, SHA224, SHA256, SHA384, SHA512 <br>  &nbsp;&nbsp;&nbsp;&nbsp; ROLE <br>  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BDK, CVK, DEK, MKAC, MKSMC, MKSMI, MKDAC, MKDN, MKCP, MKOTH, KEK, MAC1660 9, MAC97971, MAC97972, MAC97973, MAC97974, MAC97975, ZPK, PVKIBM, PVKPVV, PVKOTH <br>customAttribute customstring <br>&nbsp;&nbsp;&nbsp;&nbsp; Specifies for the value of customstring a custom attribute in string format as a Key Management Interoperability Protocol attribute. Client-specific attributes must start with the characters "x-" (x hyphen) and server-specific attributes must start with "y-" (y hyphen). <br> &nbsp;&nbsp;&nbsp;&nbsp; NAME <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Client or server attribute name. <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Value of the attribute name. <br>link objectname, objectnametarget <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies the link from one managed cryptographic object to another, closely related target managed cryptographic object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; TYPE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; CERTIFICATE, PRIVATE_KEY, PUBLIC_KEY, DERIVATION_BASE_OBJECT, DERIVED_KEY, REPLACEMENT_OBJECT, REPLACED_OBJECT <br>&nbsp;&nbsp;&nbsp;&nbsp; LINKED_OBJECT_ID <br>&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;Specify the target uuid of the linked object. <br>name <br> Specifies the name that you to identify or locate the object. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; TYPE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; TEXT, URI <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Name, or URI identifying the object. <br>objectGroup objectgroupname1, objectgroupnameN <br> &nbsp;&nbsp;&nbsp;&nbsp; Specifies for objectgroupname1, objectgroupnameN the values of one or more object group names of which this object might be part. This attribute is a Key Management Interoperability Protocol attribute. <br> &nbsp;&nbsp;&nbsp;&nbsp; VALUE <br>  &nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp; Object group name. <br> &nbsp;&nbsp;&nbsp;&nbsp; processStartDate  <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies the date in yyyy-MM-dd format on which a symmetric key object can be used for process purposes. <br> &nbsp;&nbsp;&nbsp;&nbsp; protectStopDate   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies the date in yyyy-MM-dd format on which an object cannot be used for process purposes. <br> &nbsp;&nbsp;&nbsp;&nbsp; usageLimits   <br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Specifies either total bytes (BYTE) or total objects (OBJECT) as a Key Management Interoperability Protocol attribute.
      required:
        - attrName
        - uuid
        - operation
    ckmconfigureKerberospost:
      type: object
      properties:
        dbServiceName:
          type: string
          description: Specify the name of the Db2 service principal that is registered in the Kerberos database. For example, db2instance/hostname@realm.
        userId:
          type: string
          description: Specify the user ID or client principal that is registered in the Kerberos database to access the Db2 service. For example, sklmdb41.
        password:
          type: string
          description: Specify the password of the client principal.
        wasUserName:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Key Lifecycle Manager server administrator profile.
        wasUserPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
      required:
        - dbServiceName
        - userId
        - password
        - wasUserName
        - wasUserPassword
    ckmremoveKerberosConfigpost:
      type: object
      properties:
        wasUserName:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Key Lifecycle Manager server administrator profile.
        wasUserPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
      required:
        - wasUserName
        - wasUserPassword
    ckmconfigureKerberosOnMMpost:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/configureKerberosOnMMpost'
      example:
        - userId: string
          password: string
          wasUserName: string
          wasUserPassword: string
        - ipHostName: string
          dbServiceName: string
    configureKerberosOnMMpost:
      type: object
      properties:
        userId:
          type: string
          description: Specify the user ID or client principal that is registered in the Kerberos database to access the Db2 service. For example, sklmdb41.
        password:
          type: string
          description: Specify the password of the client principal.
        wasUserName:
          type: string
          description: Specify the WebSphere Application Server login user ID for the IBM Security Key Lifecycle Manager server administrator profile.
        wasUserPassword:
          type: string
          description: Specify the password for the WebSphere Application Server login user ID.
        ipHostName:
          type: string
          description: Specify the IP address of the master server in the cluster.
        dbServiceName:
          type: string
          description: Specify the name of the Db2 service principal that is registered in the Kerberos database. 
      required:
        - userId
        - password
        - wasUserName
        - wasUserPassword
        - ipHostName
        - dbServiceName
    login:
      type: object
      properties:
        userid:
          type: string
          description: The user ID to access the IBM Security Guardium Key Lifecycle Manager server.
        password:
          type: string
          description: The password that is associated with the user ID.
      required:
        - userid
        - password
    logout:
      type: object
      properties:
        userAuthId:
          type: string
          description: The user authentication identifier that you must use to log out from the IBM Security Guardium Key Lifecycle Manager server.
      required:
        - userAuthId
  responses:
    Error200:
      description: OK
    Error201:
      description: Created
    Error400:
      description: Bad Request
    Error401:
      description: Unauthorized
    Error404:
      description: Not found
    Error500:
      description: Internal Server Error
  securitySchemes:
    SKLM:
      type: apiKey
      in: header
      name: Authorization
      description: use as SKLMAuth userAuthId=authIdValue
  tags:
    - name: Login
    - name: Backup and restore
    - name: Certificate management
    - name: Client management
    - name: Conflict resolution
    - name: Device group management
    - name: Device management
    - name: File transfer
    - name: Key group management
    - name: Key management
    - name: KMIP secret data management
    - name: KMIP template management
    - name: Master key management
    - name: Multi-Master cluster management
    - name: Object management
    - name: Pending object management
    - name: Replication
    - name: Served data archival
    - name: Server configuration
    - name: Server management
    - name: Truststore management
    - name: User Administration
security:
  - SKLM: []
